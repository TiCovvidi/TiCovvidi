{"version":3,"sources":["hooks/useMap.jsx","utils/colorForLegend.js","components/MyPopover.jsx","components/MyButton.jsx","components/ModeSelector.jsx","components/LoadingButton.jsx","components/Dialog.jsx","testUtil/randomMarkerTest.js","sections/mappa.jsx","assets/logo.png","components/Header.jsx","App.js","reportWebVitals.js","redux/reducers/reducerA.js","redux/reducers/index.js","redux/store.jsx","utils/ScrollHandler.js","index.js","dexieDB/db.js","utils/axios.js","utils/should.js","dexieDB/reportTypesDB.js","dexieDB/heatmapDB.js","dexieDB/comuniDB.js","utils/uuid.js","redux/actions.js","assets/reportTypes.js","redux/timeTypes.js","redux/viewType.js"],"names":["useMap","useState","map","setMap","L","marker","draggable","geojson","useRef","legendData","infoData","heatMapLayer","mode","useSelector","state","reducerA","shapeAndAbitanti","heatMapData","heatMap","useEffect","console","log","localMap","setView","tileLayer","detectRetina","attribution","addTo","Locate","flyTo","drawMarker","enableHighAccuracy","keepCurrentZoomLevel","cacheLocation","drawCircle","strings","title","popup","data","features","d","geometry","center","lng","lat","count","properties","reports","testData","max","current","removeLayer","HeatMapOverlay","radius","maxOpacity","scaleRadius","useLocalExtrema","latField","lngField","valueField","setData","addLayer","div","arrayForLegend","num","interval","x","i","push","Math","floor","reverse","Set","getArrayForLegend","getColor","info","control","remove","onAdd","DomUtil","create","update","id","props","innerHTML","COMUNE","highlightFeature","e","layer","target","setStyle","weight","color","dashArray","fillOpacity","Browser","ie","opera","edge","bringToFront","feature","onClickListener","latlng","resetHighlight","resetStyle","legend","position","grades","length","geoJSON","style","fillColor","opacity","onEachFeature","on","mouseover","mouseout","click","type","INSERT","get","addClass","err","error","setLatLng","VIEW","removeClass","off","HEAT","MyPopover","showPopover","children","popover","Popover","Title","as","Content","variant","OverlayTrigger","trigger","show","placement","overlay","MyButton","isLoading","setIsLoading","text","className","Spinner","animation","size","role","aria-hidden","Button","onClick","setTimeout","ModeSelector","dispatch","useDispatch","radioButtons","label","value","onModeChange","React","useCallback","setHeatMode","setInsertMode","setViewMode","radioButtonsState","useRadioState","onChange","setState","name","disabled","LoadingButton","isSent","content","width","Dialog","onClose","onSend","setIsSent","radioButton","onCloseListener","Modal","onHide","aria-labelledby","centered","Header","closeButton","Body","Row","reportTypes","Col","xs","sm","md","Footer","randomMarkerTest","Mappa","sardinia","cursor","setCursor","showButton","setShowButton","showDialog","setShowDialog","setShowPopover","startShowPopover","getLatLng","gjLayer","shapeEabitanti","results","leafletPip","pointInLayer","comune","idComune","PRO_COM","idHeatMap","setReduxReport","reportType","send","Navbar","bg","fixed","href","src","logo","alt","Nav","Link","NoMap","lazy","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initalState","reduxReport","time","timeTypes","ALL","action","payload","SEND","SET_REPORT","SET_VIEW_MODE","SET_TIME_MODE","SET_INSERT_MODE","SET_HEAT_MODE","GET_SHAPE_E_ABITANTI","GET_HEAT_MAP","GET_REPORT_TYPES","combineReducers","createStore","rootReducer","applyMiddleware","thunk","ScrollHandler","location","element","document","getElementById","hash","window","scrollTo","behavior","top","offsetTop","propTypes","PropTypes","shape","pathname","string","search","any","key","isRequired","withRouter","store","getShapeEAbitanti","getHeatMap","getReportTypes","ReactDOM","render","customAxios","axios","baseURL","newShouldDownload","Date","now","deleteOlder","sentObj","obj","filter","item","db","Dexie","tablesName","Object","keys","version","stores","getReportTypesDB","a","tbName","REPORT_TYPES","table","toArray","postReportTypesDB","clear","put","add","getHeatmapDB","HEATMAP","heatmapCells","postHeatmapDB","heatmapCell","getComuniDB","comuni","postComuniDB","UUID","report","getState","userId","localStorage","getItem","uuid","v4","setItem","getUuid","sent","JSON","parse","stringify","m1","shouldSend","post","res","catch","setTimeMode","timeMode","getShapeEAbitantiAsync","comuniHandler","newComuni","shapeEAbitanti","find","getHeatMapAsync","heatMapCells","heatmapHandler","newHeatMap","heatMapCell","_id","reportTypesHandler","resp","repTypes","flatMap","getLabel","normalize","el","reportTypesArray","newReportTypesArray","rep","index","findIndex","DAY","WEEK"],"mappings":"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","file":"static/js/main.d515f908.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Locate from \"leaflet.locatecontrol\";\r\nimport { useSelector } from \"react-redux\";\r\nimport L from \"leaflet\";\r\nimport HeatMapOverlay from \"leaflet-heatmap\";\r\n\r\nimport { getArrayForLegend } from \"../utils/colorForLegend\";\r\nimport { type } from \"../redux/viewType\"; \r\n\r\nconst useMap = () => {\r\n  const [map, setMap] = useState();\r\n  const [marker] = useState(L.marker([0, 0], { draggable: true }));\r\n  // const [heatMapLayer, setHeatMapLayer] = useState();\r\n\r\n  const geojson = useRef(null); \r\n  const legendData = useRef(null);\r\n  const infoData = useRef(null);\r\n  const heatMapLayer = useRef(null); \r\n\r\n  const mode = useSelector((state) => state.reducerA.mode);\r\n  const shapeAndAbitanti = useSelector(\r\n    (state) => state.reducerA.shapeAndAbitanti\r\n  );\r\n  const heatMapData = useSelector((state) => state.reducerA.heatMap);\r\n\r\n  useEffect(() => {\r\n    //if map is not setted, set it up, with openStreetMap layer and Locate function\r\n    if (!map) {\r\n      const sardinia = [39.905, 9.09];\r\n      console.log(\"init map\"); \r\n      const localMap = L.map(\"map\").setView(sardinia, 7);\r\n      setMap(localMap);\r\n      L.tileLayer(\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\r\n        detectRetina: false,\r\n        attribution:\r\n          '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(localMap);\r\n\r\n      new Locate({\r\n        flyTo: true,\r\n        drawMarker: true,\r\n        enableHighAccuracy: true,\r\n        keepCurrentZoomLevel: false,\r\n        cacheLocation: false,\r\n        drawCircle: false,\r\n        strings: {\r\n          title: \"Aundi sesi?\",\r\n          popup: \"non mi tocchisi\",\r\n        },\r\n      }).addTo(localMap);\r\n      //if map is already setted\r\n    }\r\n  }, [map]);\r\n\r\n  //setup Heat mode (heatMapData)\r\n  useEffect(() => {\r\n    if (heatMapData) {\r\n      var cfg = {\r\n        // radius should be small ONLY if scaleRadius is true (or small radius is intended)\r\n        // if scaleRadius is false it will be the constant radius used in pixels\r\n        radius: 0.03,\r\n        maxOpacity: 0.5,\r\n        // scales the radius based on map zoom\r\n        scaleRadius: true,\r\n        // if set to false the heatmap uses the global maximum for colorization\r\n        // if activated: uses the data maximum within the current map boundaries\r\n        //   (there will always be a red spot with useLocalExtremas true)\r\n        useLocalExtrema: false,\r\n        // which field name in your data represents the latitude - default \"lat\"\r\n        latField: \"lat\",\r\n        // which field name in your data represents the longitude - default \"lng\"\r\n        lngField: \"lng\",\r\n        // which field name in your data represents the data value - default \"value\"\r\n        valueField: \"count\",\r\n      };\r\n      const data = heatMapData.features.map((d) => {\r\n        const [lng, lat] = d.geometry.center;\r\n        // const count = Math.floor(Math.random() * 50000);\r\n        const count = d.properties.reports;\r\n\r\n        return { lat, lng, count };\r\n      });\r\n\r\n      var testData = {\r\n        max: heatMapData.max,\r\n        data,\r\n      };\r\n\r\n      if (heatMapLayer.current) {\r\n        map.removeLayer(heatMapLayer.current);\r\n      }\r\n      heatMapLayer.current = new HeatMapOverlay(cfg);\r\n      heatMapLayer.current.setData(testData);\r\n      map.addLayer(heatMapLayer.current);\r\n    }\r\n  }, [heatMapData, map]);\r\n\r\n  //setup View mode (shapeAndAbitanti)\r\n  useEffect(() => {\r\n    if (shapeAndAbitanti) {\r\n      console.log(\"loaded shape\", shapeAndAbitanti);\r\n      const arrayForLegend = getArrayForLegend(shapeAndAbitanti.count / 4);\r\n      const getColor = (d) => {\r\n        return d > arrayForLegend[7]\r\n          ? \"#800026\"\r\n          : d > arrayForLegend[6]\r\n          ? \"#BD0026\"\r\n          : d > arrayForLegend[5]\r\n          ? \"#E31A1C\"\r\n          : d > arrayForLegend[4]\r\n          ? \"#FC4E2A\"\r\n          : d > arrayForLegend[3]\r\n          ? \"#FD8D3C\"\r\n          : d > arrayForLegend[2]\r\n          ? \"#FEB24C\"\r\n          : d > arrayForLegend[1]\r\n          ? \"#FED976\"\r\n          : d > arrayForLegend[0]\r\n          ? \"#FFEDA0\"\r\n          : \"#fcf4d4\";\r\n      };\r\n      const style = (feature) => {\r\n        return {\r\n          fillColor: getColor(feature.properties.reports),\r\n          weight: 2,\r\n          opacity: 1,\r\n          color: \"white\",\r\n          dashArray: \"3\",\r\n          fillOpacity: 0.7,\r\n        };\r\n      };\r\n\r\n      const info = L.control();\r\n      if (infoData.current) {\r\n        infoData.current.remove();\r\n      }\r\n      infoData.current = info;\r\n\r\n      let div;\r\n      info.onAdd = function (map) {\r\n        div = L.DomUtil.create(\"div\", \"info hide\"); // create a div with a class \"info and hide\"\r\n        info.update();\r\n        div.id = \"info\"; //added id:info to retrieve back the div\r\n        return div;\r\n      };\r\n      info.update = function (props) {\r\n        div.innerHTML =\r\n          \"<h4>Segnalazioni per paese</h4>\" +\r\n          \"<h6>\" +\r\n          (props\r\n            ? \"<b>\" +\r\n              props.COMUNE +\r\n              \"</b><br />\" +\r\n              (props.reports || 0) +\r\n              (props.reports === 1 ? \" segnalazione\" : \" segnalazioni\")\r\n            : \"Seleziona un paese\") +\r\n          \"</h6>\";\r\n      };\r\n      const highlightFeature = (e) => {\r\n        var layer = e.target;\r\n        layer.setStyle({\r\n          weight: 5,\r\n          color: \"#666\",\r\n          dashArray: \"\",\r\n          fillOpacity: 0.7,\r\n        });\r\n        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\r\n          layer.bringToFront();\r\n        }\r\n        info.update(layer.feature.properties);\r\n      };\r\n\r\n      const onClickListener = (e) => {\r\n        // const comune = e.target.feature.properties.COMUNE;\r\n        console.log(e.target.feature.properties.reports);\r\n        map.flyTo(e.latlng);\r\n      };\r\n\r\n      const resetHighlight = (e) => {\r\n        geojson.current.resetStyle(e.target);\r\n        info.update();\r\n      };\r\n\r\n      const onEachFeature = (feature, layer) => {\r\n        layer.on({\r\n          mouseover: highlightFeature,\r\n          mouseout: resetHighlight,\r\n          click: onClickListener,\r\n        });\r\n      };\r\n\r\n      var legend = L.control({ position: \"bottomright\" });\r\n      if (legendData.current) legendData.current.remove();\r\n      legendData.current = legend;\r\n\r\n      legend.onAdd = function (map) {\r\n        var div = L.DomUtil.create(\"div\", \"info legend hide\"),\r\n          // labels = ['']\r\n          grades = [...new Set(arrayForLegend)];\r\n        grades = arrayForLegend;\r\n        // loop through our density intervals and generate a label with a colored square for each interval\r\n        for (var i = 0; i < grades.length; i++) {\r\n          div.innerHTML +=\r\n            '<i style=\"background:' +\r\n            getColor(grades[i] + 1) +\r\n            '\"></i> ' +\r\n            grades[i] +\r\n            (grades[i + 1] ? \"&ndash;\" + grades[i + 1] + \"<br>\" : \"+\");\r\n        }\r\n\r\n        div.id = \"legend\";\r\n        return div;\r\n      };\r\n\r\n      if (geojson.current) {\r\n        map.removeLayer(geojson.current);\r\n      }\r\n\r\n      geojson.current = L.geoJSON(shapeAndAbitanti, {\r\n        style,\r\n        onEachFeature,\r\n      });\r\n\r\n      //removed because it caused blinking\r\n      // geojson.current.addTo(map);\r\n      legend.addTo(map);\r\n      info.addTo(map);\r\n    }\r\n  }, [shapeAndAbitanti, map]);\r\n\r\n  //handle  mode\r\n  useEffect(() => {\r\n    if (map && geojson.current && heatMapLayer.current) {\r\n      if (mode === type.INSERT) {\r\n        console.log(\"modalità insert\");\r\n        try {\r\n          map.removeLayer(geojson.current);\r\n          map.removeLayer(heatMapLayer.current);\r\n\r\n          const legend = L.DomUtil.get(\"legend\");\r\n          const info = L.DomUtil.get(\"info\");\r\n          L.DomUtil.addClass(legend, \"hide\");\r\n          L.DomUtil.addClass(info, \"hide\");\r\n        } catch (err) {\r\n          console.error(\"error catched in usemap\");\r\n        }\r\n        map.on(\"click\", (e) => {\r\n          console.log(\"click on map\", e.latlng);\r\n          marker.setLatLng(e.latlng);\r\n          marker.addTo(map);\r\n        });\r\n      }\r\n\r\n      if (mode === type.VIEW) {\r\n        console.log(\"modalità view\");\r\n\r\n        if (geojson.current) map.removeLayer(geojson.current);\r\n        if (heatMapLayer.current) map.removeLayer(heatMapLayer.current);\r\n        marker.remove();\r\n        marker.setLatLng(null);\r\n\r\n        if (geojson.current) map.addLayer(geojson.current);\r\n\r\n        const legend = L.DomUtil.get(\"legend\");\r\n        const info = L.DomUtil.get(\"info\");\r\n        try {\r\n          L.DomUtil.removeClass(legend, \"hide\");\r\n          L.DomUtil.removeClass(info, \"hide\");\r\n        } catch (e) {\r\n          console.log(\"error catched\", e);\r\n        }\r\n        map.off(\"click\");\r\n      }\r\n\r\n      if (mode === type.HEAT) {\r\n        console.log(\"handle mode heat\");\r\n        console.log(\"modalità HEAT\");\r\n        marker.remove();\r\n        marker.setLatLng(null);\r\n\r\n        try {\r\n          map.removeLayer(geojson.current);\r\n\r\n          const legend = L.DomUtil.get(\"legend\");\r\n          const info = L.DomUtil.get(\"info\");\r\n          L.DomUtil.addClass(legend, \"hide\");\r\n          L.DomUtil.addClass(info, \"hide\");\r\n        } catch (err) {\r\n          console.log(\"error catched\");\r\n        }\r\n        if (heatMapLayer.current) map.addLayer(heatMapLayer.current);\r\n\r\n        map.off(\"click\");\r\n      }\r\n    }\r\n  }, [map, marker, mode,shapeAndAbitanti,heatMapData]);\r\n\r\n  return [map, marker];\r\n};\r\n\r\nexport default useMap;\r\n","/**\r\n * create an array of 8 for every interval from 0 to max\r\n * @param {Number} max\r\n * @param {Number} num\r\n */\r\nexport const getArrayForLegend = (max, num = 8) => {\r\n  let interval = 100;\r\n\r\n  while (true) {\r\n    if (max < 100) break;\r\n    if (max > interval && max < interval * 2) {\r\n      max = interval;\r\n      break;\r\n    }\r\n    interval = interval * 2;\r\n  }\r\n\r\n  let x = [];\r\n  for (let i = 0; i < num; i++) {\r\n    x.push(max);\r\n    max = Math.floor(max / 2);\r\n  }\r\n  x = x.reverse();\r\n  const uniqueArray = [...new Set(x)];\r\n  return uniqueArray;\r\n};\r\n","import React from \"react\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\n\r\nconst MyPopover = ({ showPopover, children }) => {\r\n  \r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">Selezionare un luogo</Popover.Title>\r\n      <Popover.Content variant='warning'>\r\n        Cliccare sul luogo di cui si vuole fare la segnalazione (\r\n        <strong>Solo Sardegna</strong>)\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n\r\n  return (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      show={showPopover}\r\n      placement=\"top\"\r\n      overlay={popover}\r\n    >\r\n      {children}\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default MyPopover;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport MyPopover from \"./MyPopover\";\r\n\r\nconst MyButton = (props) => {\r\n  const { show, id, onClickListener,showPopover } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let text = \"Invia\";\r\n\r\n  let className = \"\";\r\n\r\n  if (show) className = \"appear\";\r\n  else className = \"disappear\";\r\n\r\n  const onClick = (e) => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      onClickListener(e);\r\n      setIsLoading(false);\r\n    }, 200);\r\n  };\r\n\r\n  if (isLoading)\r\n    text = (\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <MyPopover showPopover={showPopover}>\r\n        <Button\r\n          onClick={onClick}\r\n          variant=\"primary\"\r\n          className={className}\r\n          id={id}\r\n        >\r\n          {text}\r\n        </Button>\r\n      </MyPopover>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Radio, useRadioState } from \"pretty-checkbox-react\";\r\nimport \"@djthoms/pretty-checkbox\";\r\n\r\nimport { type } from \"../redux/viewType\";\r\nimport {\r\n  setHeatMode,\r\n  setInsertMode,\r\n  setViewMode,\r\n  getHeatMap,\r\n  getShapeEAbitanti,\r\n} from \"../redux/actions\";\r\n\r\nconst ModeSelector = () => {\r\n  const dispatch = useDispatch();\r\n  const { mode } = useSelector((state) => state.reducerA);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const radioButtons = [\r\n    { label: \"Heat map\", value: type.HEAT },\r\n    { label: \"Comuni\", value: type.VIEW },\r\n    { label: \"Segnala\", value: type.INSERT },\r\n  ];\r\n\r\n  const onModeChange = React.useCallback(\r\n    (e) => {\r\n      console.log(mode);\r\n      const myMode = e.target.value;\r\n      switch (myMode) {\r\n        case type.HEAT:\r\n          dispatch(setHeatMode());\r\n          break;\r\n        case type.INSERT:\r\n          dispatch(setInsertMode());\r\n          break;\r\n        case type.VIEW:\r\n          dispatch(setViewMode());\r\n          break;\r\n        default:\r\n      }\r\n\r\n      setIsLoading(true);\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 2000);\r\n    },\r\n    [dispatch, mode]\r\n  );\r\n  // non cambia mode se invioooo\r\n\r\n  const radioButtonsState = useRadioState({\r\n    state: mode,\r\n    onChange: onModeChange,\r\n  });\r\n\r\n  useEffect(() => {\r\n    radioButtonsState.setState(mode);\r\n  }, [mode, radioButtonsState]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex p-1 justify-content-center\">\r\n        {radioButtons.map(({ value, label }) => (\r\n          <Radio\r\n            key={value}\r\n            color=\"success-o\"\r\n            name=\"mapType\"\r\n            disabled={isLoading}\r\n            {...radioButtonsState}\r\n            value={value}\r\n          >\r\n            {label}\r\n          </Radio>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModeSelector;\r\n","import React from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst LoadingButton = ({ children, onClick, isLoading, isSent, disabled }) => {\r\n  let content = children;\r\n\r\n  if (isLoading)\r\n    content = (\r\n      <>\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        Invio in corso\r\n      </>\r\n    );\r\n\r\n  if (isSent) content = \"Inviato\";\r\n\r\n  return (\r\n    <Button\r\n      style={{ width: \"10rem\" }}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      variant={isSent ? \"success\" : \"primary\"}\r\n    >\r\n      {content}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import React, {  useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Radio, useRadioState } from \"pretty-checkbox-react\";\r\nimport \"@djthoms/pretty-checkbox\";\r\n\r\nimport LoadingButton from \"./LoadingButton\";\r\nimport { reportTypes } from \"../assets/reportTypes\";\r\n\r\nconst Dialog = (props) => {\r\n  const { show, onClose, onSend } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSent, setIsSent] = useState(false);\r\n\r\n  const radioButton = useRadioState({ state: \"outside\" });\r\n\r\n  const onSendListener = () => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n      setIsSent(true);\r\n      setTimeout(() => {\r\n        onSend(radioButton.state);\r\n        radioButton.setState(\"outside\");\r\n        setTimeout(() => {\r\n          setIsSent(false);\r\n        }, 200);\r\n      }, 1000);\r\n    }, 1000);\r\n  };\r\n  const onCloseListener = () => {\r\n    onClose();\r\n    radioButton.setState(\"outside\");\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onHide={onCloseListener}\r\n      show={show}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Dov'è successo?\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>Seleziona un'opzione</h4>\r\n        <Row>\r\n          {reportTypes.map(({ label, value }) => (\r\n            <Col key={value} xs={12} sm={6} md={4}>\r\n              <Radio\r\n                color=\"primary\"\r\n                name=\"types\"\r\n                {...radioButton}\r\n                value={value}\r\n              >\r\n                {label}\r\n              </Radio>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onCloseListener}>\r\n          Chiudi\r\n        </Button>\r\n        <LoadingButton\r\n          isLoading={isLoading}\r\n          isSent={isSent}\r\n          disabled={isSent||isLoading}\r\n          onClick={onSendListener}\r\n        >\r\n          Invia Segnalazione\r\n        </LoadingButton>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import { reportTypes } from \"../assets/reportTypes\";\r\n\r\nconst tlSardinia = { lat: 41.310824, lng: 8.118896 };\r\nconst trSardinia = { lat: 41.310824, lng: 9.871216 };\r\nconst blSardinia = { lat: 38.858959, lng: 8.118896 };\r\n// const brSardinia = { lat: 38.858959, lng: 9.871216 };\r\n\r\nconst randomMarkerTest = async (marker, reportAction, sendAction) => {\r\n  for (let i = 0; i < 10000; i++) {\r\n    await sleep(100);\r\n    const randomLng = getRandom(tlSardinia.lng, trSardinia.lng);\r\n    const randomLat = getRandom(blSardinia.lat, tlSardinia.lat);\r\n    marker.setLatLng({ lat: randomLat, lng: randomLng });\r\n      reportAction(); \r\n\r\n    const reportType = getRandomTYpe();\r\n    sendAction(reportType); \r\n  }\r\n  console.log(\"fine\");\r\n};\r\n\r\nfunction getRandom(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n} \r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction getRandomTYpe() {\r\n  const randomInt = getRandomInt(0, reportTypes.length);\r\n  return reportTypes[randomInt].value;\r\n}\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //Il max è escluso e il min è incluso\r\n}\r\nexport default randomMarkerTest;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport L from \"leaflet\";\r\nimport leafletPip from \"@mapbox/leaflet-pip\";\r\n\r\nimport shapeEabitanti from \"../assets/shapeEabitanti.json\";\r\nimport heatMap from \"../assets/heatMap.json\";\r\n\r\nimport { type } from \"../redux/viewType\";\r\nimport { send, setReduxReport } from \"../redux/actions\";\r\nimport useMap from \"../hooks/useMap.jsx\";\r\nimport MyButton from \"../components/MyButton\";\r\n\r\nimport ModeSelector from \"../components/ModeSelector\";\r\nimport Dialog from \"../components/Dialog\";\r\n\r\nimport test from \"../testUtil/randomMarkerTest\";\r\n\r\nconst Mappa = () => {\r\n  const sardinia = [39.905, 9.09];\r\n  const { mode } = useSelector((state) => state.reducerA);\r\n\r\n  const dispatch = useDispatch();\r\n  const [map, marker] = useMap();\r\n  const [cursor, setCursor] = useState(\"crosshair\");\r\n\r\n  const [showButton, setShowButton] = useState();\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [showPopover, setShowPopover] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (mode === type.INSERT) setShowButton(true);\r\n    else setShowButton(false);\r\n  }, [mode]);\r\n\r\n  const startShowPopover = () => {\r\n    setShowPopover(true);\r\n    setTimeout(() => {\r\n      setShowPopover(false);\r\n    }, 4000);\r\n  };\r\n\r\n  const onClickListenerINVIA = (e) => {\r\n    console.log(\"inviaClick paese\");\r\n    console.log(\"posizione marker\", marker.getLatLng());\r\n\r\n    if (!marker.getLatLng()) {\r\n      startShowPopover();\r\n      return;\r\n    }\r\n    const { lat, lng } = marker.getLatLng();\r\n    let gjLayer = L.geoJSON(shapeEabitanti);\r\n    let results = leafletPip.pointInLayer([lng, lat], gjLayer);\r\n    if (results.length > 0) {\r\n      const comune = results[0].feature.properties.COMUNE;\r\n      const idComune = results[0].feature.properties.PRO_COM;\r\n\r\n      gjLayer = L.geoJSON(heatMap);\r\n      results = leafletPip.pointInLayer([lng, lat], gjLayer);\r\n      const idHeatMap = results[0].feature.properties.id;\r\n      console.log(comune, idComune, idHeatMap);\r\n\r\n      setShowDialog(true);\r\n      dispatch(setReduxReport({ comune, idComune, idHeatMap, lat, lng }));\r\n    } else {\r\n      startShowPopover();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (mode === type.INSERT) setCursor(\"crosshair\");\r\n    else setCursor(\"grab\");\r\n  }, [mode]);\r\n\r\n  const closeClickListener = () => {\r\n    console.log(\"close\");\r\n    setShowDialog(false);\r\n  };\r\n  const sendClickListener = (reportType) => {\r\n    dispatch(send({ reportType }));\r\n    setShowDialog(false);\r\n    marker.remove();\r\n    marker.setLatLng(null);\r\n\r\n    //check used cause in testing it crash.\r\n    if (map) map.setView(sardinia, 7);\r\n  };\r\n\r\n  /// to be removed, just for thest\r\n  useEffect(() => {\r\n    if (mode === type.INSERT) {\r\n      // test(marker, onClickListenerINVIA, sendClickListener);\r\n    }\r\n  }, [mode]);\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <ModeSelector />\r\n\r\n      <div className=\"anchor\" id=\"#mappa\"></div>\r\n      <div style={{ cursor }} id=\"map\" />\r\n\r\n      <>\r\n        <MyButton\r\n          onClickListener={onClickListenerINVIA}\r\n          show={showButton}\r\n          id=\"send-button\"\r\n          showPopover={showPopover}\r\n        ></MyButton>\r\n\r\n        <Dialog\r\n          show={showDialog}\r\n          onClose={closeClickListener}\r\n          onSend={sendClickListener}\r\n        />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default Mappa;\r\n","export default __webpack_public_path__ + \"static/media/logo.7e749bc2.png\";","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Navbar className=\"sticky-nav p-0\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n      <a href=\"#mappa\">\r\n        <img\r\n          src={logo}\r\n          className=\"d-inline-block align-top ml-1 logo\"\r\n          alt=\"Logo\"\r\n        />\r\n      </a>\r\n      <Nav className=\"mr-auto links\">\r\n        <Nav.Link href=\"#mappa\">Mappa</Nav.Link>\r\n        <Nav.Link href=\"#guida\">Guida</Nav.Link>\r\n        <Nav.Link href=\"#faq\">FAQ</Nav.Link>\r\n      </Nav>\r\n      \r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport Mappa from \"./sections/mappa\";\r\nimport Header from \"./components/Header\";\r\n\r\n// import NoMap from \"./section/NoMap\";\r\n\r\n\r\nconst NoMap = lazy(()=>import('./sections/NoMap'))\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Mappa />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Suspense fallback={<div>Loading..</div>}>\r\n        <NoMap />\r\n      </Suspense>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  SEND,\r\n  SET_REPORT,\r\n  SET_VIEW_MODE,\r\n  SET_INSERT_MODE,\r\n  SET_HEAT_MODE,\r\n  GET_SHAPE_E_ABITANTI,\r\n  GET_HEAT_MAP,\r\n  GET_REPORT_TYPES,\r\n  SET_TIME_MODE,\r\n} from \"../actions\";\r\n\r\nimport { type } from \"../viewType\";\r\nimport { timeTypes } from \"../timeTypes\";\r\n\r\nconst initalState = {\r\n  mode: type.INSERT,\r\n  shapeAndAbitanti: null,\r\n  heatMap: null,\r\n  reduxReport: null,\r\n  reportTypes: null,\r\n  time: timeTypes.ALL,\r\n};\r\n\r\nconst reducerA = (state = initalState, action) => {\r\n  console.log(\"AZIONE\", action.type, \" payload: \", action.payload);\r\n  switch (action.type) {\r\n    case SEND: {\r\n      return { ...state, mode: type.HEAT }; //mode: type.HEAT\r\n    }\r\n    case SET_REPORT: {\r\n      return { ...state, reduxReport: action.payload };\r\n    }\r\n    case SET_VIEW_MODE: {\r\n      return { ...state, mode: type.VIEW };\r\n    }\r\n    case SET_TIME_MODE: {\r\n      return { ...state, time: action.payload };\r\n    }\r\n    case SET_INSERT_MODE: {\r\n      return { ...state, mode: type.INSERT };\r\n    }\r\n    case SET_HEAT_MODE: {\r\n      return { ...state, mode: type.HEAT };\r\n    }\r\n    case GET_SHAPE_E_ABITANTI: {\r\n      return { ...state, shapeAndAbitanti: action.payload };\r\n    }\r\n    case GET_HEAT_MAP: {\r\n      return { ...state, heatMap: action.payload };\r\n    }\r\n    case GET_REPORT_TYPES: {\r\n      return { ...state, reportTypes: action.payload };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducerA;\r\n","import { combineReducers } from \"redux\";\r\nimport reducerA from \"./reducerA\";\r\n\r\nif (process.env.NODE_ENV !== \"development\") console.log = () => {};\r\n\r\nexport default combineReducers({ reducerA });\r\n","import { createStore ,applyMiddleware} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from \"./reducers\";\r\n\r\n\r\nexport default createStore(rootReducer,applyMiddleware(thunk));\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollHandler = ({ location }) => {\r\n  useEffect(() => {\r\n    const element = document.getElementById(location.hash);\r\n\r\n    setTimeout(() => {\r\n      window.scrollTo({\r\n        behavior: element ? \"smooth\" : \"auto\",\r\n        top: element ? element.offsetTop : 0\r\n      });\r\n    }, 100);\r\n  }, [location]);\r\n\r\n  return null;\r\n};\r\n\r\nScrollHandler.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string,\r\n    search: PropTypes.string,\r\n    hash: PropTypes.string,\r\n    state: PropTypes.any,\r\n    key: PropTypes.string\r\n  }).isRequired\r\n};\r\n\r\nexport default withRouter(ScrollHandler);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./App.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { getHeatMap, getShapeEAbitanti, getReportTypes } from \"./redux/actions\";\r\nimport ScrollHandler from \"./utils/ScrollHandler\";\r\n\r\n\r\nstore.dispatch(getShapeEAbitanti());\r\nstore.dispatch(getHeatMap());\r\nstore.dispatch(getReportTypes());\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <ScrollHandler />\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import Dexie from \"dexie\";\r\n\r\nimport { timeTypes } from \"../redux/timeTypes\";\r\n\r\nconst db = new Dexie(\"TiCovvidi\");\r\n\r\nconst tablesName = {};\r\n\r\nconst types = Object.keys(timeTypes);\r\n\r\nfor (const key of types) {\r\n  tablesName[`heatmap_${key}`] = \"++id\";\r\n  tablesName[`comune_${key}`] = \"++id\";\r\n  tablesName[`reportTypes_${key}`] = \"++id\";\r\n}\r\n\r\ndb.version(1).stores(tablesName);\r\n\r\nexport default db;\r\n","import axios from \"axios\";\r\n\r\nconst customAxios = axios.create({\r\n  baseURL: \"https://ticovvidi.eu.openode.io\",\r\n  // baseURL: \"http://192.168.1.88:8080\",\r\n  // baseURL: \"http://localhost:8080\",\r\n});\r\n\r\nexport { customAxios };\r\n","const s1 = 1000;\r\nconst m1 = s1 * 60;\r\nconst m15 = m1 * 15;\r\n// const h1 = m15 * 4;\r\nconst TIME_TO_WAIT_DOWNLOAD = s1;\r\n\r\nconst SEND = \"at_json\";\r\n\r\nconst SEND_LIMIT_BY_TIME = 5;\r\nconst TIME_TO_WAIT_SEND = m15;\r\n\r\n///////////////////////////////////\r\nexport const newShouldDownload = ([data]) => {\r\n  try {\r\n    const now = Date.now();\r\n    if (now - data.time > TIME_TO_WAIT_DOWNLOAD) return true;\r\n  } catch (err) {}\r\n  return false;\r\n};\r\n\r\n////////////////////////////////////////////////\r\nexport const shouldSend = () => {\r\n  const sent = localStorage.getItem(SEND);\r\n  let sentObj = JSON.parse(sent);\r\n\r\n  if (sentObj === null) {\r\n    localStorage.setItem(SEND, JSON.stringify([Date.now()]));\r\n    console.log(\"Puoi inviare\");\r\n    return true;\r\n  }\r\n  sentObj = deleteOlder(TIME_TO_WAIT_SEND, sentObj);\r\n\r\n  if (sentObj.length < SEND_LIMIT_BY_TIME) {\r\n    sentObj.push(Date.now());\r\n    localStorage.setItem(SEND, JSON.stringify(sentObj));\r\n    console.log(\"Puoi inviare\");\r\n    return true;\r\n  } else {\r\n    console.log(\"Aspetta\");\r\n    return false;\r\n  }\r\n};\r\n\r\nconst deleteOlder = (time, sentObj) => {\r\n  const now = Date.now();\r\n\r\n  for (let obj of sentObj) {\r\n    const diff = now - obj;\r\n\r\n    if (diff > time) {\r\n      sentObj = sentObj.filter((item) => obj !== item);\r\n    }\r\n  }\r\n  return sentObj;\r\n};\r\n","import db from \"./db\";\r\n\r\nconst REPORT_TYPES = \"reportTypes\";\r\n\r\nexport const getReportTypesDB = async (time) => {\r\n  const tbName = REPORT_TYPES + \"_\" + time;\r\n\r\n  const reportTypes = await db.table(tbName).toArray();\r\n  return reportTypes;\r\n};\r\n\r\nexport const postReportTypesDB = async (reportTypes, time) => {\r\n  const tbName = REPORT_TYPES + \"_\" + time;\r\n  db.table(tbName).clear();\r\n\r\n  await db.table(tbName).put({ id: 1, time: Date.now() });\r\n\r\n  for (let reportType of reportTypes)\r\n    await db.table(tbName).add({\r\n      reportType: reportType.reportType,\r\n      count: reportType.count,\r\n    });\r\n};\r\n","import db from \"./db\";\r\n\r\nconst HEATMAP = \"heatmap\";\r\n\r\nexport const getHeatmapDB = async (time) => {\r\n  const tbName = HEATMAP + \"_\" + time;\r\n  const heatmapCells = await db.table(tbName).toArray();\r\n  return heatmapCells;\r\n};\r\n\r\nexport const postHeatmapDB = async (heatmapCells, time) => {\r\n  const tbName = HEATMAP + \"_\" + time;\r\n  db.table(tbName).clear();\r\n  await db.table(tbName).put({ id: 1, time: Date.now() });\r\n  for (let heatmapCell of heatmapCells)\r\n    await db.table(tbName).add({\r\n      idHeatMap: heatmapCell.idHeatMap,\r\n      count: heatmapCell.count,\r\n    });\r\n};\r\n","import db from \"./db\";\r\n\r\nconst COMUNE = \"comune\";\r\n\r\nexport const getComuniDB = async (time) => {\r\n  const tbName = COMUNE + \"_\" + time;\r\n  const comuni = await db.table(tbName).toArray();\r\n  return comuni;\r\n};\r\n\r\nexport const postComuniDB = async (comuni, time) => {\r\n  const tbName = COMUNE + \"_\" + time;\r\n  db.table(tbName).clear();\r\n\r\n  await db.table(tbName).put({ id: 1, time: Date.now() });\r\n\r\n  for (let comune of comuni)\r\n    await db.table(tbName).add({\r\n      comune: comune.comune,\r\n      idComune: comune.idComune,\r\n      count: comune.count,\r\n    });\r\n};\r\n","import { v4 } from \"uuid\";\r\n\r\nconst UUID = \"at_cW\";\r\n\r\nexport const getUuid = () => {\r\n  const userId = localStorage.getItem(UUID);\r\n  if (!userId) {\r\n    const uuid = v4();\r\n    localStorage.setItem(UUID, uuid);\r\n    console.log(\"new id :\", uuid);\r\n    return uuid;\r\n  }\r\n  console.log(\"saved id :\", userId);\r\n  return userId;\r\n};\r\n","import { customAxios } from \"../utils/axios\";\r\n\r\nimport shapeEAbitanti from \"../assets/shapeEabitanti.json\";\r\nimport heatMap from \"../assets/heatMap.json\";\r\nimport { normalize, getLabel } from \"../assets/reportTypes\";\r\n\r\nimport { type } from \"./viewType\";\r\n\r\nimport { newShouldDownload, shouldSend } from \"../utils/should\";\r\nimport { getReportTypesDB, postReportTypesDB } from \"../dexieDB/reportTypesDB\";\r\nimport { getHeatmapDB, postHeatmapDB } from \"../dexieDB/heatmapDB\";\r\nimport { getComuniDB, postComuniDB } from \"../dexieDB/comuniDB\";\r\n\r\nimport { getUuid } from \"../utils/uuid\";\r\n\r\nexport const SET_REPORT = \"SET_REPORT\";\r\nexport const SEND = \"SEND\";\r\nexport const SET_VIEW_MODE = \"SET_VIEW_MODE\";\r\nexport const SET_INSERT_MODE = \"SET_INSERT_MODE\";\r\nexport const SET_HEAT_MODE = \"SET_HEAT_MODE\";\r\nexport const GET_SHAPE_E_ABITANTI = \"GET_SHAPE_E_ABITANTI\";\r\nexport const GET_HEAT_MAP = \"GET_HEAT_MAP\";\r\nexport const GET_REPORT_TYPES = \"GET_REPORT_TYPES\";\r\nexport const SET_TIME_MODE = \"SET_TIME_MODE\";\r\n\r\nexport const setReduxReport = (report) => {\r\n  return { type: SET_REPORT, payload: report };\r\n};\r\nconst sendAsync = () => {\r\n  return { type: SEND };\r\n};\r\n\r\nexport const send = ({ reportType }) => {\r\n  return (dispatch, getState) => {\r\n    console.log(\"SENDING....\");\r\n    const userId = getUuid();\r\n    const report = {\r\n      ...getState().reducerA.reduxReport,\r\n      reportType,\r\n      userId,\r\n    };\r\n\r\n    if (!shouldSend()) {\r\n      dispatch(sendAsync());\r\n      return;\r\n    }\r\n    customAxios\r\n      .post(\"/report\", {\r\n        ...report,\r\n      })\r\n      .then((res) => {\r\n        // dispatch(sendAsync());\r\n        console.log(res);\r\n      })\r\n      .catch((err) => console.log(\"error \", err));\r\n  };\r\n};\r\n\r\nexport const setViewMode = () => {\r\n  return { type: SET_VIEW_MODE };\r\n};\r\n\r\nexport const setInsertMode = () => {\r\n  return { type: SET_INSERT_MODE };\r\n};\r\nexport const setHeatMode = () => {\r\n  return { type: SET_HEAT_MODE };\r\n};\r\n\r\nexport const setMode = (viewType) => {\r\n  switch (viewType) {\r\n    case type.VIEW:\r\n      return { type: SET_VIEW_MODE };\r\n    case type.INSERT:\r\n      return { type: SET_INSERT_MODE };\r\n    case type.HEAT:\r\n      return { type: SET_HEAT_MODE };\r\n    default:\r\n      return { type: SET_VIEW_MODE };\r\n  }\r\n};\r\n\r\nexport const setTimeMode = (timeMode) => {\r\n  return { type: SET_TIME_MODE, payload: timeMode };\r\n};\r\n\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////    COMUNI    ///////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n\r\nconst getShapeEAbitantiAsync = (data) => {\r\n  return { type: GET_SHAPE_E_ABITANTI, payload: data };\r\n};\r\n\r\nexport const getShapeEAbitanti = () => {\r\n  return async (dispatch, getState) => {\r\n    const time = getState().reducerA.time;\r\n\r\n    const comuni = await getComuniDB(time);\r\n\r\n    if (comuni.length > 0 && !newShouldDownload(comuni)) {\r\n      comuniHandler(comuni, dispatch);\r\n      return;\r\n    }\r\n\r\n    customAxios\r\n      .get(\"/report/comuni?time=\" + time)\r\n      .then((res) => {\r\n        const comuni = res.data;\r\n        postComuniDB(comuni, time);\r\n        comuniHandler(comuni, dispatch);\r\n      })\r\n      .catch((err) => {\r\n        const newComuni = { type: \"FeatureCollection\", features: [] };\r\n        newComuni.max = 0;\r\n        newComuni.count = 0;\r\n        dispatch(getShapeEAbitantiAsync(newComuni));\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nconst comuniHandler = (comuni, dispatch) => {\r\n  let max = 0;\r\n  let count = 0;\r\n  const newComuni = {\r\n    type: \"FeatureCollection\",\r\n    features: shapeEAbitanti.features,\r\n  };\r\n\r\n  for (let i = 0; i < shapeEAbitanti.features.length; i++) {\r\n    const comune = comuni.find((comune) => {\r\n      return comune.comune === shapeEAbitanti.features[i].properties.COMUNE;\r\n    });\r\n\r\n    if (comune) {\r\n      newComuni.features[i].properties.reports = comune.count;\r\n      max = Math.max(max, comune.count);\r\n      count = count + comune.count;\r\n    } else {\r\n      newComuni.features[i].properties.reports = 0;\r\n    }\r\n  }\r\n  newComuni.max = max;\r\n  newComuni.count = count;\r\n\r\n  dispatch(getShapeEAbitantiAsync(newComuni));\r\n};\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////    COMUNI    ///////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////    HEAT   //////////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n\r\nconst getHeatMapAsync = (heatMap) => {\r\n  return { type: GET_HEAT_MAP, payload: heatMap };\r\n};\r\n\r\nexport const getHeatMap = () => {\r\n  return async (dispatch, getState) => {\r\n    const time = getState().reducerA.time;\r\n\r\n    const heatMapCells = await getHeatmapDB(time);\r\n\r\n    if (heatMapCells.length > 0 && !newShouldDownload(heatMapCells)) {\r\n      heatmapHandler(heatMapCells, dispatch);\r\n      return;\r\n    }\r\n\r\n    customAxios\r\n      .get(\"/report/heatmap?time=\" + time)\r\n      .then((res) => {\r\n        const heatMapCells = res.data;\r\n        postHeatmapDB(heatMapCells, time);\r\n        heatmapHandler(heatMapCells, dispatch);\r\n      })\r\n      .catch((err) => {\r\n        const newHeatMap = { type: \"FeatureCollection\", features: [] };\r\n        newHeatMap.max = 0;\r\n        newHeatMap.count = 0;\r\n        dispatch(getHeatMapAsync(newHeatMap));\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nconst heatmapHandler = (heatMapCells, dispatch) => {\r\n  const newHeatMap = { type: \"FeatureCollection\", features: [] };\r\n  let max = 0;\r\n  let count = 0;\r\n  for (let heatMapCell of heatMapCells) {\r\n    const id = heatMapCell.idHeatMap;\r\n    try {\r\n      heatMap.features[id].properties.reports = heatMapCell.count;\r\n      newHeatMap.features.push(heatMap.features[id]);\r\n      max = Math.max(max, heatMapCell.count);\r\n      count = count + heatMapCell.count;\r\n    } catch (err) {\r\n      console.log(err, \"id: \", heatMapCell._id);\r\n    }\r\n  }\r\n  newHeatMap.max = max;\r\n  newHeatMap.count = count;\r\n  dispatch(getHeatMapAsync(newHeatMap));\r\n};\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////    HEAT   //////////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////  REPORT   //////////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\nexport const getReportTypesAsync = (reportTypes) => {\r\n  return { type: GET_REPORT_TYPES, payload: reportTypes };\r\n};\r\n\r\nexport const getReportTypes = () => {\r\n  console.log(\"get report types\");\r\n\r\n  return async (dispatch, getState) => {\r\n    const time = getState().reducerA.time;\r\n    const reportTypes = await getReportTypesDB(time);\r\n\r\n    if (reportTypes.length > 0 && !newShouldDownload(reportTypes)) {\r\n      reportTypesHandler(reportTypes, dispatch);\r\n      return;\r\n    }\r\n\r\n    customAxios\r\n      .get(\"/report/reportTypes?time=\" + time)\r\n      .then((resp) => {\r\n        const reportTypes = resp.data;\r\n        postReportTypesDB(reportTypes, time);\r\n        reportTypesHandler(reportTypes, dispatch);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nconst reportTypesHandler = (resp, dispatch) => {\r\n  let repTypes = resp.flatMap((data) => {\r\n    if (data.time) return [];\r\n    return {\r\n      reportType: getLabel(data.reportType),\r\n      count: data.count,\r\n    };\r\n  });\r\n\r\n  // repTypes = repTypes.sort((el1, el2) => {\r\n  //   return el1.count - el2.count;\r\n  // });\r\n\r\n  repTypes = normalize(repTypes);\r\n  setTimeout(() => {\r\n    dispatch(getReportTypesAsync(repTypes));\r\n  }, 1000);\r\n};\r\n\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////  REPORT   //////////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n","export const reportTypes = [\r\n  {\r\n    label: \"All 'aperto\",\r\n    value: \"outside\",\r\n  },\r\n  {\r\n    label: \"Mezzo pubblico\",\r\n    value: \"bus\",\r\n  },\r\n  {\r\n    label: \"Locale\",\r\n    value: \"local\",\r\n  },\r\n  {\r\n    label: \"Ufficio pubblico\",\r\n    value: \"public\",\r\n  },\r\n  {\r\n    label: \"Struttura sanitaria\",\r\n    value: \"hospital\",\r\n  },\r\n  {\r\n    label: \"Edificio scolastico\",\r\n    value: \"school\",\r\n  },\r\n  {\r\n    label: \"Attività\",\r\n    value: \"business\",\r\n  },\r\n  {\r\n    label: \"Altro\",\r\n    value: \"other\",\r\n  },\r\n];\r\n\r\nexport const getLabel = (value) => {\r\n  const label = reportTypes.find((el) => value === el.value).label;\r\n  return label;\r\n};\r\n\r\nexport const normalize = (reportTypesArray) => {\r\n  if (reportTypesArray.length === 0) {\r\n\r\n    return [\r\n      {\r\n        count: 1,\r\n        reportType: \"No Data\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  const newReportTypesArray = reportTypes.map((type) => {\r\n    return { reportType: type.label, count: 0 };\r\n  });\r\n\r\n  for (const rep of reportTypesArray) {\r\n    const index = newReportTypesArray.findIndex(\r\n      (el) => el.reportType === rep.reportType\r\n    );\r\n    if (index !== -1) newReportTypesArray[index].count = rep.count;\r\n  }\r\n\r\n\r\n\r\n  // const tot = reportTypesArray.reduce((sum, el) => {\r\n  //   return sum + el.count;\r\n  // }, 0);\r\n  // for (let i = 0; i < reportTypesArray.length; i++) {\r\n  //   reportTypesArray[i].count = (\r\n  //     (reportTypesArray[i].count / tot) *\r\n  //     100\r\n  //   )\r\n  //   .toFixed(10);\r\n  // }\r\n  return newReportTypesArray;\r\n};\r\n","export const timeTypes = {\r\n  DAY: \"DAY\",\r\n  WEEK: \"WEEK\",\r\n  ALL: \"ALL\",\r\n};\r\n ","export const type = {\r\n  VIEW: \"VIEW\",\r\n  INSERT: \"INSERT\",\r\n  HEAT: \"HEAT\",\r\n};\r\n\r\n\r\n// delete?\r\nexport const switchView = (viewType) => {\r\n  // return viewType === type.INSERT ? type.VIEW : type.INSERT;\r\n  switch (viewType) {\r\n    case type.VIEW:\r\n      return type.INSERT;\r\n    case type.INSERT:\r\n      return type.HEAT;\r\n    case type.HEAT:\r\n      return type.VIEW;\r\n    default:\r\n      return type.VIEW;\r\n  }\r\n};\r\n"],"sourceRoot":""}