{"version":3,"sources":["assets/FAQ.js","components/PieChart.jsx","components/Info.jsx","components/FAQ.jsx","sections/NoMap.jsx"],"names":["exports","getFAQ","title","content","link","PieChart","reportTypes","useSelector","state","reducerA","series","length","map","rep","count","options","plotOptions","pie","customScale","chart","type","labels","reportType","colors","style","textAlign","Spinner","as","className","animation","role","size","aria-hidden","Info","FAQ","Container","Accordion","faq","index","Card","Header","Toggle","Button","variant","eventKey","toString","Collapse","Body","Link","href","NoMap","fluid","id","Row","Col"],"mappings":"6FAAAA,EAAQC,OAAS,CACf,CACEC,MAAO,0BACPC,QACE,yGAEJ,CACED,MAAO,iEACPC,QAAS,uBAEX,CACED,MAAO,uBACPC,QACE,uIACFC,KAAM,qCAGR,CACEF,MAAO,oCACPC,QACE,uGAEJ,CACED,MAAO,4CACPC,QACE,6MAEJ,CACED,MAAO,iCACPC,QACE,4GAEJ,CACED,MAAO,kCACPC,QAAS,yCAEX,CACED,MAAO,2CACPC,QACE,iHAEJ,CACED,MAAO,0CACPC,QACE,iHAEJ,CACED,MAAO,kEACPC,QACE,2MAEJ,CACED,MAAO,iCACPC,QACE,8LAEJ,CACED,MAAO,wCACPC,QACE,2KAEJ,CACED,MACE,6FACFC,QACE,8FAEJ,CACED,MAAO,6CACPC,QACE,uK,4JCNSE,EA1DE,WACf,IAAMC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASH,eAEpDI,EACJJ,GAAeA,EAAYK,OAAS,EAChCL,EAAYM,KAAI,SAACC,GAAD,OAASA,EAAIC,SAC7B,CAAC,GAQDC,EAAU,CACdC,YAAa,CACXC,IAAK,CACHC,YAAa,KAGjBC,MAAO,CAELC,KAAM,OAERC,OAfAf,GAAeA,EAAYK,OAAS,EAChCL,EAAYM,KAAI,SAACC,GAAD,OAASA,EAAIS,cAC7B,CAAC,WAcLC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAIEJ,EAAQ,cAAC,IAAD,CAAOJ,QAASA,EAASL,OAAQA,EAAQU,KAAK,QAkB5D,OAjBed,EAcba,EAbA,qBAAKK,MAAO,CAAEC,UAAW,UAAzB,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,cACVC,UAAU,OACVC,KAAK,SACLC,KAAK,KACLC,cAAY,OANd,SAQE,sBAAMJ,UAAU,UAAhB,6BCtBOK,EA9BF,WACX,OACE,gCACE,oBAAIT,MAAO,CAAEC,UAAW,UAAxB,2BAEA,yFAEE,6CAFF,4GAMA,gDACA,qBAAIG,UAAU,aAAd,UACE,+CACe,6CADf,uCAGA,6EACA,uDACuB,2CADvB,IAC+C,OAE/C,8DACA,6BACE,4DAEF,kG,mCCmBOM,EApCH,WACV,OACE,eAACC,EAAA,EAAD,CAAWP,UAAU,OAArB,UACE,qCAEA,cAACQ,EAAA,EAAD,UACGnC,SAAOW,KAAI,SAACyB,EAAKC,GAChB,OACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,UACE,cAACJ,EAAA,EAAUK,OAAX,CACEd,GAAIe,IACJC,QAAQ,OACRC,SAAUN,EAAMO,WAHlB,SAKGR,EAAInC,UAGT,cAACkC,EAAA,EAAUU,SAAX,CAAoBF,SAAUN,EAAMO,WAApC,SACE,gCACE,cAACN,EAAA,EAAKQ,KAAN,UAAYV,EAAIlC,UACfkC,EAAIjC,KACH,cAACmC,EAAA,EAAKS,KAAN,CAAWpB,UAAU,OAAOqB,KAAMZ,EAAIjC,KAAtC,SACGiC,EAAIjC,OAEL,YAjBCkC,YCkBRY,UA1BD,WACV,OACE,gCACE,8BACE,eAACf,EAAA,EAAD,CAAWP,UAAU,MAAMuB,OAAK,EAAhC,UAEE,qBAAKvB,UAAU,SAASwB,GAAG,WAC3B,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK1B,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,QAGJ,cAAC0B,EAAA,EAAD,UACE,cAAC,EAAD,cAMR,qBAAK1B,UAAU,SAASwB,GAAG,SAC3B,cAAC,EAAD","file":"static/js/4.43c0355b.chunk.js","sourcesContent":["exports.getFAQ = [\r\n  {\r\n    title: \"A cosa serve TiCovvidi?\",\r\n    content:\r\n      \"E' un esperimento. Invece di tracciare i positivi, perché non tracciare i comportamenti scorretti?\",\r\n  },\r\n  {\r\n    title: \"Può essere usato come alternativa alle App di tracciamento?\",\r\n    content: \"Ma candu mai! (NO).\",\r\n  },\r\n  {\r\n    title: \"Cosa ti ha ispirato?\",\r\n    content:\r\n      \"Il progetto 30cappa. Mi ha fatto conoscere le potenzialità dell'open data per poter lavorare con i limiti amministrativi comunali\",\r\n    link: \"https://ondata.github.io/30cappa/\",\r\n  },\r\n\r\n  {\r\n    title: \"Rispetta la privacy degli utenti?\",\r\n    content:\r\n      \"Si. Non vengono salvati dati sensibili degli utenti, se non la sola segnalazione che viene inviata.\",\r\n  },\r\n  {\r\n    title: \"Rispetta la privacy dei luoghi segnalati?\",\r\n    content:\r\n      \"Si. Le segnalazioni inviate di un determinato punto (coordinata) dopo essere state elaborate, vengnon mostrate sulla mappa solo in modo approssimato. Non c'è modo per risalire a uno specifico punto.\",\r\n  },\r\n  {\r\n    title: \"Non funziona, cosa posso fare?\",\r\n    content:\r\n      \"Prova un browser differente, o, se usi lo smartphone, a cambiare l'orientamento (orizzontale,verticale).\",\r\n  },\r\n  {\r\n    title: \"Non ho risolto comunque, e ora?\",\r\n    content: \"¯\\\\_(ツ)_/¯ Non ne ho idea.\",\r\n  },\r\n  {\r\n    title: \"Perchè è stato creato questo sito?\",\r\n    content:\r\n      \"Per creare consapevolezza. Sono ancora tanti i comportamenti scorretti che causano ogni giorno nuovi contagi.\",\r\n  },\r\n  {\r\n    title: \"Perché non vedo la mia segnalazione?\",\r\n    content:\r\n      \"Una volta fatta la segnalazione può passare un po' di tempo prima che possa essere elaborata e processata.\",\r\n  },\r\n  {\r\n    title: '\"Il covid non è altro che una semplice influenza, e quindi?\"',\r\n    content:\r\n      \"Puoi anche non credere che ci sia una pandemia in corso, ma finchè ci saranno nuovi positivi, ci saranno sempre restrizioni alle libertà personali, e, di conseguenza perdita di posti di lavoro.\",\r\n  },\r\n  {\r\n    title: 'Perchè il nome \"TiCovvidi\"?',\r\n    content:\r\n      \"Voleva essere uno sfottò, rivolto a tutti coloro che, noncuranti del momento in cui ci troviamo, mettono a rischio non solo la propria vita, ma, ancora di più, la vita degli altri.\",\r\n  },\r\n  {\r\n    title: 'Ok, ma perché proprio \"TiCovvidi\"?',\r\n    content:\r\n      \"Per assonanza con un'espressione più o meno nota all'interno dei confini regionali. Sinceramente non ho idea del perché sia legata alla zebra senza strisce...   \",\r\n  },\r\n  {\r\n    title:\r\n      \"Perchè sul telefono, le domande più lunghe sono centrate e non allineate a sinistra?\",\r\n    content:\r\n      \"¯\\\\_(ツ)_/¯ E' qualcosa che ho notato e da fastidio al mio OCD, lo sistemerò.\",\r\n  },\r\n  {\r\n    title: \"Perché solo queste categorie di luoghi?\",\r\n    content:\r\n      \"Ho cercato di racchiudere tutto in queste categorie, sia per una questione di estetica ma anche per non andare troppo sullo specifico e non penalizzare qualcuno.\",\r\n  },\r\n \r\n];\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PieChart = () => {\r\n  const reportTypes = useSelector((state) => state.reducerA.reportTypes);\r\n\r\n  const series =\r\n    reportTypes && reportTypes.length > 0\r\n      ? reportTypes.map((rep) => rep.count)\r\n      : [1];\r\n\r\n  const labels =\r\n    reportTypes && reportTypes.length > 0\r\n      ? reportTypes.map((rep) => rep.reportType)\r\n      : [\"No Data\"];\r\n\r\n    \r\n  const options = {\r\n    plotOptions: {\r\n      pie: {\r\n        customScale: 0.9,\r\n      },\r\n    },\r\n    chart: {\r\n      //  background:'#c4c4c4',\r\n      type: \"pie\",\r\n    },\r\n    labels: labels,\r\n    colors: [\r\n      \"#008FFB\",\r\n      \"#00E396\",\r\n      \"#FEB019\",\r\n      \"#FF4560\",\r\n      \"#775DD0\",\r\n      \"#A300D6\",\r\n      \"#A5978B\",\r\n      \"#2E294E\",\r\n    ],\r\n  };\r\n\r\n  const chart = <Chart options={options} series={series} type=\"pie\" />;\r\n  let content = !reportTypes ? (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Spinner\r\n        as=\"span\"\r\n        className=\"spinner-pie\"\r\n        animation=\"grow\"\r\n        role=\"status\"\r\n        size=\"xl\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  ) : (\r\n    chart\r\n  );\r\n\r\n  return content;\r\n};\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\n\r\nconst Info = () => {\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>Guida all'uso</h1>\r\n\r\n      <p>\r\n        Questo sito non fa' altro che raccogliere segnalazioni (\r\n        <strong>anonime</strong>) per evidenziare i luoghi in cui le persone non\r\n        seguono correttamente le regole per evitare i contagi\r\n      </p>\r\n\r\n      <h4>Come segnalare</h4>\r\n      <ul className=\"comma-list\">\r\n        <li>\r\n          Selezionare '<strong>Segnala</strong>' situato al di sopra della mappa\r\n        </li>\r\n        <li>Fare click sul luogo che si vuole segnalare</li>\r\n        <li>\r\n          Premere il pulsante '<strong>Invia</strong>'{\" \"}\r\n        </li>\r\n        <li>Selezionare il tipo di luogo</li>\r\n        <li>\r\n          <strong>'Invia Segnalazione'</strong>\r\n        </li>\r\n        <li>A questo punto la segnalazione è avvenuta con successo</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { getFAQ } from \"../assets/FAQ.js\";\r\n\r\nconst FAQ = () => {\r\n  return (\r\n    <Container className=\"m-0 \">\r\n      <h2>FAQ</h2>\r\n\r\n      <Accordion>\r\n        {getFAQ.map((faq, index) => {\r\n          return (\r\n            <Card key={index}>\r\n              <Card.Header>\r\n                <Accordion.Toggle\r\n                  as={Button}\r\n                  variant=\"link\"\r\n                  eventKey={index.toString()}\r\n                >\r\n                  {faq.title}\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey={index.toString()}>\r\n                <div>\r\n                  <Card.Body>{faq.content}</Card.Body>\r\n                  {faq.link ? (\r\n                    <Card.Link className=\"pl-4\" href={faq.link}>\r\n                      {faq.link}\r\n                    </Card.Link>\r\n                  ) : null}\r\n                </div>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n","import React from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport TimeSelector from '../components/TimeSelector'\r\nimport PieChart from \"../components/PieChart\";\r\nimport Info from \"../components/Info\";\r\nimport FAQ from \"../components/FAQ\";\r\nconst NoMap = () => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Container className=\"m-0\" fluid>\r\n            {/* <TimeSelector /> */}\r\n            <div className=\"anchor\" id=\"#guida\" />\r\n            <Row>\r\n              <Col className=\"p-0\">\r\n                <div className=\"pie\">\r\n                  <PieChart />\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <Info />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n\r\n        <div className=\"anchor\" id=\"#faq\" />\r\n        <FAQ />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default NoMap;"],"sourceRoot":""}