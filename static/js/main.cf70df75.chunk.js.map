{"version":3,"sources":["redux/viewType.js","utils/axios.js","utils/should.js","dexieDB/db.js","dexieDB/reportTypesDB.js","dexieDB/heatmapDB.js","dexieDB/comuniDB.js","utils/uuid.js","redux/actions.js","hooks/useMap.jsx","utils/colorForLegend.js","components/MyPopover.jsx","components/MyButton.jsx","components/ModeSelector.jsx","components/LoadingButton.jsx","components/Dialog.jsx","testUtil/randomMarkerTest.js","sections/mappa.jsx","assets/logo.png","components/Header.jsx","App.js","reportWebVitals.js","redux/reducers/reducerA.js","redux/reducers/index.js","redux/store.jsx","utils/ScrollHandler.js","index.js","assets/reportTypes.js"],"names":["type","customAxios","axios","create","baseURL","m15","m1","TIME_TO_WAIT_DOWNLOAD","DOWNLOAD","SEND","shouldDownload","now","Date","downloadTime","localStorage","getItem","setExpireDownloadTime","a","setItem","deleteOlder","time","sentObj","obj","filter","item","db","Dexie","version","stores","reportTypes","heatmap","comune","getReportTypesDB","table","toArray","postReportTypesDB","clear","reportType","add","count","getHeatmapDB","heatmapCells","postHeatmapDB","heatmapCell","idHeatMap","getComuniDB","comuni","postComuniDB","idComune","UUID","SET_REPORT","SET_VIEW_MODE","SET_INSERT_MODE","SET_HEAT_MODE","GET_SHAPE_E_ABITANTI","GET_HEAT_MAP","GET_REPORT_TYPES","send","dispatch","getState","console","log","userId","uuid","v4","getUuid","report","reducerA","reduxReport","sent","JSON","parse","stringify","length","push","shouldSend","post","then","res","catch","err","getShapeEAbitantiAsync","data","payload","comuniHandler","max","i","find","shapeEAbitanti","features","properties","COMUNE","reports","Math","getHeatMapAsync","heatMap","heatmapHandler","heatMapCells","newHeatMap","heatMapCell","id","_id","reportTypesHandler","resp","repTypes","map","getLabel","sort","el1","el2","setTimeout","useMap","useState","setMap","L","marker","draggable","geojson","setGeojson","heatMapLayer","setHeatMapLayer","mode","useSelector","state","shapeAndAbitanti","heatMapData","useEffect","localMap","setView","tileLayer","detectRetina","attribution","addTo","Locate","flyTo","drawMarker","enableHighAccuracy","keepCurrentZoomLevel","cacheLocation","drawCircle","strings","title","popup","d","geometry","center","lng","lat","testData","localHeatMapLayer","HeatMapOverlay","radius","maxOpacity","scaleRadius","useLocalExtrema","latField","lngField","valueField","setData","div","arrayForLegend","num","interval","x","floor","reverse","Set","getArrayForLegend","getColor","info","control","onAdd","DomUtil","update","props","innerHTML","highlightFeature","e","layer","target","setStyle","weight","color","dashArray","fillOpacity","Browser","ie","opera","edge","bringToFront","feature","onClickListener","latlng","resetHighlight","myGeojson","resetStyle","legend","position","grades","geoJSON","style","fillColor","opacity","onEachFeature","on","mouseover","mouseout","click","removeLayer","get","addClass","error","setLatLng","remove","addLayer","removeClass","off","MyPopover","showPopover","children","popover","Popover","Title","as","Content","variant","OverlayTrigger","trigger","show","placement","overlay","MyButton","isLoading","setIsLoading","text","className","Spinner","animation","size","role","aria-hidden","Button","onClick","ModeSelector","useDispatch","radioButtons","label","value","onModeChange","React","useCallback","radioButtonsState","useRadioState","onChange","setState","name","LoadingButton","isSent","disabled","content","width","Dialog","onClose","onSend","setIsSent","radioButton","onCloseListener","Modal","onHide","aria-labelledby","centered","Header","closeButton","Body","Row","Col","xs","sm","md","Footer","randomMarkerTest","Mappa","sardinia","cursor","setCursor","showButton","setShowButton","showDialog","setShowDialog","setShowPopover","startShowPopover","getLatLng","gjLayer","shapeEabitanti","results","leafletPip","pointInLayer","PRO_COM","setReduxReport","Navbar","bg","fixed","href","src","logo","alt","Nav","Link","NoMap","lazy","App","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initalState","action","combineReducers","createStore","rootReducer","applyMiddleware","thunk","ScrollHandler","location","element","document","getElementById","hash","window","scrollTo","behavior","top","offsetTop","propTypes","PropTypes","shape","pathname","string","search","any","key","isRequired","withRouter","store","process","REACT_APP_NOT_SECRET_CODE","ReactDOM","render","exports","el","normalize","reportTypesArray","tot","reduce","sum","toFixed"],"mappings":"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","file":"static/js/main.cf70df75.chunk.js","sourcesContent":["export const type = {\r\n  VIEW: \"VIEW\",\r\n  INSERT: \"INSERT\",\r\n  HEAT: \"HEAT\",\r\n};\r\n\r\nexport const switchView = (viewType) => {\r\n  // return viewType === type.INSERT ? type.VIEW : type.INSERT;\r\n  switch (viewType) {\r\n    case type.VIEW:\r\n      return type.INSERT;\r\n    case type.INSERT:\r\n      return type.HEAT;\r\n    case type.HEAT:\r\n      return type.VIEW;\r\n    default:\r\n      return type.VIEW;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst customAxios = axios.create({\r\n  baseURL: \"https://ticovvidi.eu.openode.io\",\r\n  // baseURL: \"http://192.168.1.88:8080\",\r\n  // baseURL: \"http://localhost:8080\",\r\n});\r\n\r\nexport { customAxios };\r\n","const s1 = 1000;\r\nconst m1 = s1 * 60;\r\nconst m15 = m1 * 15;\r\n// const h1 = m15 * 4;\r\nconst TIME_TO_WAIT_DOWNLOAD = m15;\r\n\r\nconst DOWNLOAD = \"at.rand\";\r\nconst SEND = \"at_json\";\r\n\r\nconst SEND_LIMIT_BY_TIME = 5; \r\nconst TIME_TO_WAIT_SEND = m15;\r\n\r\nexport const shouldDownload = () => {\r\n  const now = Date.now();\r\n  const downloadTime = localStorage.getItem(DOWNLOAD);\r\n  if (!downloadTime) return true; \r\n\r\n  const shouldDownload = now - downloadTime > TIME_TO_WAIT_DOWNLOAD;\r\n  return shouldDownload;\r\n};\r\n\r\nexport const setExpireDownloadTime = async () => {\r\n  const downloadTime = localStorage.getItem(DOWNLOAD);\r\n\r\n  const now = Date.now();\r\n\r\n  if (!downloadTime) {\r\n    localStorage.setItem(DOWNLOAD, now);\r\n    return;\r\n  }\r\n\r\n  const diff = now - downloadTime;\r\n\r\n  if (diff > TIME_TO_WAIT_DOWNLOAD) localStorage.setItem(DOWNLOAD, now);\r\n};\r\n\r\n////////////////////////////////////////////////\r\nexport const shouldSend = () => {\r\n  const sent = localStorage.getItem(SEND);\r\n  let sentObj = JSON.parse(sent);\r\n\r\n  if (sentObj === null) {\r\n    localStorage.setItem(SEND, JSON.stringify([Date.now()]));\r\n    console.log(\"Puoi inviare\");\r\n    return true;\r\n  }\r\n  sentObj = deleteOlder(TIME_TO_WAIT_SEND, sentObj);\r\n\r\n  if (sentObj.length < SEND_LIMIT_BY_TIME) {\r\n    sentObj.push(Date.now());\r\n    localStorage.setItem(SEND, JSON.stringify(sentObj));\r\n    console.log(\"Puoi inviare\");\r\n    return true;\r\n  } else {\r\n    console.log(\"Aspetta\");\r\n    return false;\r\n  }\r\n};\r\n\r\nconst deleteOlder = (time, sentObj) => {\r\n  const now = Date.now();\r\n\r\n  for (let obj of sentObj) {\r\n    const diff = now - obj;\r\n\r\n    if (diff > time) {\r\n      sentObj = sentObj.filter((item) => obj !== item);\r\n    }\r\n  }\r\n  return sentObj;\r\n};\r\n","import Dexie from \"dexie\";\r\n\r\nconst db = new Dexie(\"TiCovvidi\");\r\ndb.version(1).stores({ reportTypes: \"++id\", heatmap: \"++id\",comune:'++id' });\r\n\r\nexport default db;\r\n","import db from \"./db\";\r\n\r\n\r\nexport const getReportTypesDB = async () => {\r\n  const reportTypes = await db.table(\"reportTypes\").toArray();\r\n\r\n  return reportTypes;\r\n};\r\n\r\nexport const postReportTypesDB = async (reportTypes) => {\r\n  db.table(\"reportTypes\").clear();\r\n  for (let reportType of reportTypes)\r\n    db.table(\"reportTypes\").add({\r\n      reportType: reportType.reportType,\r\n      count: reportType.count,\r\n    });\r\n};\r\n","import db from \"./db\";\r\n\r\n\r\nexport const getHeatmapDB = async () => {\r\n \r\n\r\n  const heatmapCells = await db.table(\"heatmap\").toArray();\r\n  return heatmapCells;\r\n};\r\n\r\nexport const postHeatmapDB = async (heatmapCells) => {\r\n \r\n  \r\n  db.table(\"heatmap\").clear();\r\n  for (let heatmapCell of heatmapCells)\r\n    db.table(\"heatmap\").add({\r\n      idHeatMap: heatmapCell.idHeatMap,\r\n      count: heatmapCell.count,\r\n    });\r\n};\r\n","import db from \"./db\";\r\n\r\nexport const getComuniDB = async () => {\r\n  const comuni = await db.table(\"comune\").toArray();\r\n  return comuni;\r\n};\r\n\r\nexport const postComuniDB = async (comuni) => {\r\n  db.table(\"comune\").clear();\r\n  for (let comune of comuni)\r\n    db.table(\"comune\").add({\r\n      comune: comune.comune,\r\n      idComune: comune.idComune,\r\n      count: comune.count,\r\n    }); \r\n};\r\n","import { v4 } from \"uuid\";\r\n\r\nconst UUID = \"at_cW\";\r\n\r\nexport const getUuid = () => {\r\n  const userId = localStorage.getItem(UUID);\r\n  if (!userId) {\r\n    const uuid = v4();\r\n    localStorage.setItem(UUID, uuid);\r\n    console.log(\"new id :\", uuid);\r\n    return uuid;\r\n  }\r\n  console.log(\"saved id :\", userId);\r\n  return userId;\r\n};\r\n","import { customAxios } from \"../utils/axios\";\r\n\r\nimport shapeEAbitanti from \"../assets/shapeEabitanti.json\";\r\nimport heatMap from \"../assets/heatMap.json\";\r\nimport { getLabel, normalize } from \"../assets/reportTypes\";\r\n\r\nimport { type } from \"./viewType\";\r\n\r\nimport { shouldDownload, shouldSend } from \"../utils/should\";\r\nimport { getReportTypesDB, postReportTypesDB } from \"../dexieDB/reportTypesDB\";\r\nimport { getHeatmapDB, postHeatmapDB } from \"../dexieDB/heatmapDB\";\r\nimport { getComuniDB, postComuniDB } from \"../dexieDB/comuniDB\";\r\n\r\nimport { getUuid } from \"../utils/uuid\";\r\n\r\nexport const SET_REPORT = \"SET_REPORT\";\r\nexport const SEND = \"SEND\";\r\nexport const SET_VIEW_MODE = \"SET_VIEW_MODE\";\r\nexport const SET_INSERT_MODE = \"SET_INSERT_MODE\";\r\nexport const SET_HEAT_MODE = \"SET_HEAT_MODE\";\r\nexport const GET_SHAPE_E_ABITANTI = \"GET_SHAPE_E_ABITANTI\";\r\nexport const GET_HEAT_MAP = \"GET_HEAT_MAP\";\r\nexport const GET_REPORT_TYPES = \"GET_REPORT_TYPES\";\r\n\r\nexport const setReduxReport = (report) => {\r\n  return { type: SET_REPORT, payload: report };\r\n};\r\nconst sendAsync = () => {\r\n  return { type: SEND };\r\n};\r\n\r\nexport const send = ({ reportType }) => {\r\n  return (dispatch, getState) => {\r\n    console.log(\"SENDING....\");\r\n    const userId = getUuid();\r\n    const report = {\r\n      ...getState().reducerA.reduxReport,\r\n      reportType,\r\n      userId,\r\n    };\r\n\r\n    if (!shouldSend()) {\r\n      dispatch(sendAsync());\r\n      return;\r\n    }\r\n    customAxios\r\n      .post(\"/report\", {\r\n        ...report,\r\n      })\r\n      .then((res) => {\r\n        // dispatch(sendAsync());\r\n        console.log(res);\r\n      })\r\n      .catch((err) => console.log(\"error \", err));\r\n\r\n  };\r\n};\r\n\r\nexport const setViewMode = () => {\r\n  return { type: SET_VIEW_MODE };\r\n};\r\n\r\nexport const setInsertMode = () => {\r\n  return { type: SET_INSERT_MODE };\r\n};\r\nexport const setHeatMode = () => {\r\n  return { type: SET_HEAT_MODE };\r\n};\r\n\r\nexport const setMode = (viewType) => {\r\n  switch (viewType) {\r\n    case type.VIEW:\r\n      return { type: SET_VIEW_MODE };\r\n    case type.INSERT:\r\n      return { type: SET_INSERT_MODE };\r\n    case type.HEAT:\r\n      return { type: SET_HEAT_MODE };\r\n    default:\r\n      return { type: SET_VIEW_MODE };\r\n  }\r\n};\r\n\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////    COMUNI    ///////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n\r\nconst getShapeEAbitantiAsync = (data) => {\r\n  return { type: GET_SHAPE_E_ABITANTI, payload: data };\r\n};\r\n\r\nexport const getShapeEAbitanti = () => {\r\n  return async (dispatch) => {\r\n    if (!shouldDownload()) {\r\n      const comuni = await getComuniDB();\r\n      if (comuni.length > 0) {\r\n        comuniHandler(comuni, dispatch);\r\n        return;\r\n      }\r\n    }\r\n    customAxios\r\n      .get(\"/report/comuni\")\r\n      .then((res) => {\r\n        const comuni = res.data;\r\n        postComuniDB(comuni);\r\n        comuniHandler(comuni, dispatch);\r\n      })\r\n      .catch((err) => {\r\n        shapeEAbitanti.max = 0;\r\n        shapeEAbitanti.count = 0;\r\n        dispatch(getShapeEAbitantiAsync(shapeEAbitanti));\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nconst comuniHandler = (comuni, dispatch) => {\r\n  let max = 0;\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < shapeEAbitanti.features.length; i++) {\r\n    const comune = comuni.find((comune) => {\r\n      return comune.comune === shapeEAbitanti.features[i].properties.COMUNE;\r\n    });\r\n\r\n    if (comune) {\r\n      shapeEAbitanti.features[i].properties.reports = comune.count;\r\n      max = Math.max(max, comune.count);\r\n      count = count + comune.count;\r\n    }\r\n  }\r\n  shapeEAbitanti.max = max;\r\n  shapeEAbitanti.count = count;\r\n  dispatch(getShapeEAbitantiAsync(shapeEAbitanti));\r\n};\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////    COMUNI    ///////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////    HEAT   //////////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n\r\nconst getHeatMapAsync = (heatMap) => {\r\n  return { type: GET_HEAT_MAP, payload: heatMap };\r\n};\r\n\r\nexport const getHeatMap = () => {\r\n  return async (dispatch) => {\r\n    if (!shouldDownload()) {\r\n      const heatMapCells = await getHeatmapDB();\r\n      if (heatMapCells.length > 0) {\r\n        heatmapHandler(heatMapCells, dispatch);\r\n        return;\r\n      }\r\n    }\r\n\r\n    customAxios\r\n      .get(\"/report/heatmap\")\r\n      .then((res) => {\r\n        const heatMapCells = res.data;\r\n        postHeatmapDB(heatMapCells);\r\n        heatmapHandler(heatMapCells, dispatch);\r\n      })\r\n      .catch((err) => {\r\n        const newHeatMap = { type: \"FeatureCollection\", features: [] };\r\n        newHeatMap.max = 0;\r\n        newHeatMap.count = 0;\r\n        dispatch(getHeatMapAsync(newHeatMap));\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nconst heatmapHandler = (heatMapCells, dispatch) => {\r\n  const newHeatMap = { type: \"FeatureCollection\", features: [] };\r\n  let max = 0;\r\n  let count = 0;\r\n  for (let heatMapCell of heatMapCells) {\r\n    const id = heatMapCell.idHeatMap;\r\n    try {\r\n      heatMap.features[id].properties.reports = heatMapCell.count;\r\n      newHeatMap.features.push(heatMap.features[id]);\r\n      max = Math.max(max, heatMapCell.count);\r\n      count = count + heatMapCell.count;\r\n    } catch (err) {\r\n      console.log(err, \"id: \", heatMapCell._id);\r\n    }\r\n  }\r\n  newHeatMap.max = max;\r\n  newHeatMap.count = count;\r\n  dispatch(getHeatMapAsync(newHeatMap));\r\n};\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////    HEAT   //////////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////  REPORT   //////////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\nexport const getReportTypesAsync = (reportTypes) => {\r\n  return { type: GET_REPORT_TYPES, payload: reportTypes };\r\n};\r\n\r\nexport const getReportTypes = () => {\r\n  console.log(\"get report types\");\r\n\r\n  return async (dispatch) => {\r\n    if (!shouldDownload()) {\r\n      const reportTypes = await getReportTypesDB();\r\n      if (reportTypes.length > 0) {\r\n        reportTypesHandler(reportTypes, dispatch);\r\n        return;\r\n      }\r\n    }\r\n\r\n    customAxios\r\n      .get(\"/report/reportTypes\")\r\n      .then((resp) => {\r\n        const reportTypes = resp.data;\r\n        postReportTypesDB(reportTypes);\r\n        reportTypesHandler(reportTypes, dispatch);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nconst reportTypesHandler = (resp, dispatch) => {\r\n  let repTypes = resp.map((data) => {\r\n    return {\r\n      reportType: getLabel(data.reportType),\r\n      count: data.count,\r\n    };\r\n  });\r\n\r\n  repTypes = repTypes.sort((el1, el2) => {\r\n    return el1.count - el2.count;\r\n  });\r\n  // repTypes = normalize(repTypes);\r\n  setTimeout(() => {\r\n    dispatch(getReportTypesAsync(repTypes));\r\n  }, 1000);\r\n};\r\n\r\n/////////////////////////////////////////////////////////////////\r\n////////////////////  REPORT   //////////////////////////////////\r\n/////////////////////////////////////////////////////////////////\r\n","import { useEffect, useState } from \"react\";\r\nimport Locate from \"leaflet.locatecontrol\";\r\nimport { useSelector } from \"react-redux\";\r\nimport L from \"leaflet\";\r\nimport HeatMapOverlay from \"leaflet-heatmap\";\r\n\r\nimport { getArrayForLegend } from \"../utils/colorForLegend\";\r\nimport { type } from \"../redux/viewType\";\r\n// import shapeEabitanti from \"../assets/shapeEabitanti.json\";\r\n// import heatMapData from \"../assets/heatMap.json\";\r\n\r\nconst useMap = () => {\r\n  const [map, setMap] = useState();\r\n  const [marker] = useState(L.marker([0, 0], { draggable: true }));\r\n  const [geojson, setGeojson] = useState();\r\n  const [heatMapLayer, setHeatMapLayer] = useState();\r\n\r\n  const mode = useSelector((state) => state.reducerA.mode);\r\n  const shapeAndAbitanti = useSelector(\r\n    (state) => state.reducerA.shapeAndAbitanti\r\n  );\r\n  const heatMapData = useSelector((state) => state.reducerA.heatMap);\r\n\r\n  useEffect(() => {\r\n    //if map is not setted, set it up, with openStreetMap layer and Locate function\r\n    if (!map) {\r\n      const sardinia = [39.905, 9.09];\r\n      console.log(\"init map\");\r\n      const localMap = L.map(\"map\").setView(sardinia, 7);\r\n      setMap(localMap);\r\n      L.tileLayer(\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\r\n        detectRetina: false,\r\n        attribution:\r\n          '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(localMap);\r\n\r\n      new Locate({\r\n        flyTo: true,\r\n        drawMarker: true,\r\n        enableHighAccuracy: true,\r\n        keepCurrentZoomLevel: false,\r\n        cacheLocation: false,\r\n        drawCircle: false,\r\n        strings: {\r\n          title: \"Aundi sesi?\",\r\n          popup: \"non mi tocchisi\",\r\n        },\r\n      }).addTo(localMap);\r\n      //if map is already setted\r\n    }\r\n  }, [map, marker, mode, geojson, heatMapLayer, shapeAndAbitanti]);\r\n\r\n  //setup Heat mode (heatMapData)\r\n  useEffect(() => {\r\n    if (heatMapData) {\r\n      var cfg = {\r\n        // radius should be small ONLY if scaleRadius is true (or small radius is intended)\r\n        // if scaleRadius is false it will be the constant radius used in pixels\r\n        radius: 0.03,\r\n        maxOpacity: 0.5,\r\n        // scales the radius based on map zoom\r\n        scaleRadius: true,\r\n        // if set to false the heatmap uses the global maximum for colorization\r\n        // if activated: uses the data maximum within the current map boundaries\r\n        //   (there will always be a red spot with useLocalExtremas true)\r\n        useLocalExtrema: false,\r\n        // which field name in your data represents the latitude - default \"lat\"\r\n        latField: \"lat\",\r\n        // which field name in your data represents the longitude - default \"lng\"\r\n        lngField: \"lng\",\r\n        // which field name in your data represents the data value - default \"value\"\r\n        valueField: \"count\",\r\n      };\r\n      const data = heatMapData.features.map((d) => {\r\n        const [lng, lat] = d.geometry.center;\r\n        // const count = Math.floor(Math.random() * 50000);\r\n        const count = d.properties.reports;\r\n\r\n        return { lat, lng, count };\r\n      });\r\n\r\n      var testData = {\r\n        max: heatMapData.max,\r\n        data,\r\n      };\r\n      const localHeatMapLayer = new HeatMapOverlay(cfg);\r\n      localHeatMapLayer.setData(testData);\r\n      // map.addLayer(heatMapLayer);\r\n      setHeatMapLayer(localHeatMapLayer);\r\n    }\r\n  }, [heatMapData]);\r\n\r\n  //setup View mode (shapeAndAbitanti)\r\n  useEffect(() => {\r\n    if (shapeAndAbitanti) {\r\n      const arrayForLegend = getArrayForLegend(shapeAndAbitanti.count / 4);\r\n      const getColor = (d) => {\r\n        return d > arrayForLegend[7]\r\n          ? \"#800026\"\r\n          : d > arrayForLegend[6]\r\n          ? \"#BD0026\"\r\n          : d > arrayForLegend[5]\r\n          ? \"#E31A1C\"\r\n          : d > arrayForLegend[4]\r\n          ? \"#FC4E2A\"\r\n          : d > arrayForLegend[3]\r\n          ? \"#FD8D3C\"\r\n          : d > arrayForLegend[2]\r\n          ? \"#FEB24C\"\r\n          : d > arrayForLegend[1]\r\n          ? \"#FED976\"\r\n          : d > arrayForLegend[0]\r\n          ? \"#FFEDA0\"\r\n          : \"#fcf4d4\";\r\n      };\r\n      const style = (feature) => {\r\n        return {\r\n          fillColor: getColor(feature.properties.reports),\r\n          weight: 2,\r\n          opacity: 1,\r\n          color: \"white\",\r\n          dashArray: \"3\",\r\n          fillOpacity: 0.7,\r\n        };\r\n      };\r\n      const info = L.control();\r\n      let div;\r\n      info.onAdd = function (map) {\r\n        div = L.DomUtil.create(\"div\", \"info hide\"); // create a div with a class \"info and hide\"\r\n        info.update();\r\n        div.id = \"info\"; //added id:info to retrieve back the div\r\n        return div;\r\n      };\r\n      info.update = function (props) {\r\n        div.innerHTML =\r\n          \"<h4>Segnalazioni per paese</h4>\" +\r\n          \"<h6>\" +\r\n          (props\r\n            ? \"<b>\" +\r\n              props.COMUNE +\r\n              \"</b><br />\" +\r\n              (props.reports || 0) +\r\n              (props.reports === 1 ? \" segnalazione\" : \" segnalazioni\")\r\n            : \"Seleziona un paese\") +\r\n          \"</h6>\";\r\n      };\r\n      const highlightFeature = (e) => {\r\n        var layer = e.target;\r\n        layer.setStyle({\r\n          weight: 5,\r\n          color: \"#666\",\r\n          dashArray: \"\",\r\n          fillOpacity: 0.7,\r\n        });\r\n        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\r\n          layer.bringToFront();\r\n        }\r\n        info.update(layer.feature.properties);\r\n      };\r\n\r\n      const onClickListener = (e) => {\r\n        // const comune = e.target.feature.properties.COMUNE;\r\n        map.flyTo(e.latlng);\r\n      };\r\n\r\n      const resetHighlight = (e) => {\r\n        myGeojson.resetStyle(e.target);\r\n        info.update();\r\n      };\r\n\r\n      const onEachFeature = (feature, layer) => {\r\n        layer.on({\r\n          mouseover: highlightFeature,\r\n          mouseout: resetHighlight,\r\n          click: onClickListener,\r\n        });\r\n      };\r\n\r\n      var legend = L.control({ position: \"bottomright\" });\r\n\r\n      legend.onAdd = function (map) {\r\n        var div = L.DomUtil.create(\"div\", \"info legend hide\"),\r\n          // labels = ['']\r\n          grades = [...new Set(arrayForLegend)];\r\n        grades = arrayForLegend;\r\n        // loop through our density intervals and generate a label with a colored square for each interval\r\n        for (var i = 0; i < grades.length; i++) {\r\n          div.innerHTML +=\r\n            '<i style=\"background:' +\r\n            getColor(grades[i] + 1) +\r\n            '\"></i> ' +\r\n            grades[i] +\r\n            (grades[i + 1] ? \"&ndash;\" + grades[i + 1] + \"<br>\" : \"+\");\r\n        }\r\n\r\n        div.id = \"legend\";\r\n        return div;\r\n      };\r\n\r\n      legend.addTo(map);\r\n      const myGeojson = L.geoJSON(shapeAndAbitanti, {\r\n        style,\r\n        onEachFeature,\r\n      });\r\n      setGeojson(myGeojson);\r\n\r\n      info.addTo(map);\r\n    }\r\n  }, [shapeAndAbitanti, map]);\r\n\r\n  //handle  mode\r\n  useEffect(() => {\r\n    if (map && geojson && heatMapLayer) {\r\n      if (mode === type.INSERT) {\r\n        console.log(\"modalità insert\");\r\n        try {\r\n          map.removeLayer(geojson);\r\n          map.removeLayer(heatMapLayer);\r\n\r\n          const legend = L.DomUtil.get(\"legend\");\r\n          const info = L.DomUtil.get(\"info\");\r\n          L.DomUtil.addClass(legend, \"hide\");\r\n          L.DomUtil.addClass(info, \"hide\");\r\n        } catch (err) {\r\n          console.error(\"error catched in usemap\");\r\n        }\r\n        map.on(\"click\", (e) => {\r\n          console.log(\"click on map\", e.latlng);\r\n          marker.setLatLng(e.latlng);\r\n          marker.addTo(map);\r\n        });\r\n      }\r\n\r\n      if (mode === type.VIEW) {\r\n        console.log(\"modalità view\");\r\n\r\n        if (geojson) map.removeLayer(geojson);\r\n        if (heatMapLayer) map.removeLayer(heatMapLayer);\r\n        marker.remove();\r\n        marker.setLatLng(null);\r\n\r\n        if (geojson) map.addLayer(geojson);\r\n\r\n        const legend = L.DomUtil.get(\"legend\");\r\n        const info = L.DomUtil.get(\"info\");\r\n        try {\r\n          L.DomUtil.removeClass(legend, \"hide\");\r\n          L.DomUtil.removeClass(info, \"hide\");\r\n        } catch (e) {\r\n          console.log(\"error catched\", e);\r\n        }\r\n        map.off(\"click\");\r\n      }\r\n\r\n      if (mode === type.HEAT) {\r\n        console.log(\"modalità HEAT\");\r\n        marker.remove();\r\n        marker.setLatLng(null);\r\n\r\n        try {\r\n          map.removeLayer(geojson);\r\n\r\n          const legend = L.DomUtil.get(\"legend\");\r\n          const info = L.DomUtil.get(\"info\");\r\n          L.DomUtil.addClass(legend, \"hide\");\r\n          L.DomUtil.addClass(info, \"hide\");\r\n        } catch (err) {\r\n          console.log(\"error catched\");\r\n        }\r\n        if (heatMapLayer) map.addLayer(heatMapLayer);\r\n\r\n        map.off(\"click\");\r\n      }\r\n    }\r\n  }, [map, marker, geojson, heatMapLayer, mode]);\r\n\r\n  return [map, marker];\r\n};\r\n\r\nexport default useMap;\r\n","/**\r\n * create an array of 8 for every interval from 0 to max\r\n * @param {Number} max\r\n * @param {Number} num\r\n */\r\nexport const getArrayForLegend = (max, num = 8) => {\r\n  let interval = 100;\r\n\r\n  while (true) {\r\n    if (max < 100) break;\r\n    if (max > interval && max < interval * 2) {\r\n      max = interval;\r\n      break;\r\n    }\r\n    interval = interval * 2;\r\n  }\r\n\r\n  let x = [];\r\n  for (let i = 0; i < num; i++) {\r\n    x.push(max);\r\n    max = Math.floor(max / 2);\r\n  }\r\n  x = x.reverse();\r\n  const uniqueArray = [...new Set(x)];\r\n  return uniqueArray;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\n\r\nconst MyPopover = ({ showPopover, children }) => {\r\n  \r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">Selezionare un luogo</Popover.Title>\r\n      <Popover.Content variant='warning'>\r\n        Cliccare sul luogo di cui si vuole fare la segnalazione (\r\n        <strong>Solo Sardegna</strong>)\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n\r\n  return (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      show={showPopover}\r\n      placement=\"top\"\r\n      overlay={popover}\r\n    >\r\n      {children}\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default MyPopover;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport MyPopover from \"./MyPopover\";\r\n\r\nconst MyButton = (props) => {\r\n  const { show, id, onClickListener,showPopover } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let text = \"Invia\";\r\n\r\n  let className = \"\";\r\n\r\n  if (show) className = \"appear\";\r\n  else className = \"disappear\";\r\n\r\n  const onClick = (e) => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      onClickListener(e);\r\n      setIsLoading(false);\r\n    }, 200);\r\n  };\r\n\r\n  if (isLoading)\r\n    text = (\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <MyPopover showPopover={showPopover}>\r\n        <Button\r\n          onClick={onClick}\r\n          variant=\"primary\"\r\n          className={className}\r\n          id={id}\r\n        >\r\n          {text}\r\n        </Button>\r\n      </MyPopover>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Radio, useRadioState } from \"pretty-checkbox-react\";\r\nimport \"@djthoms/pretty-checkbox\";\r\n\r\nimport { type } from \"../redux/viewType\";\r\nimport * as actions from \"../redux/actions\";\r\n\r\nconst ModeSelector = () => {\r\n  const dispatch = useDispatch();\r\n  const { mode } = useSelector((state) => state.reducerA);\r\n\r\n  const radioButtons = [\r\n    { label: \"Heat map\", value: type.HEAT },\r\n    { label: \"Comuni\", value: type.VIEW },\r\n    { label: \"Segnala\", value: type.INSERT },\r\n  ];\r\n\r\n  const onModeChange = React.useCallback(\r\n    (e) => {\r\n      console.log(mode);\r\n      const myMode = e.target.value;\r\n      switch (myMode) {\r\n        case type.HEAT:\r\n          dispatch(actions.setHeatMode());\r\n          break;\r\n        case type.INSERT:\r\n          dispatch(actions.setInsertMode());\r\n          break;\r\n        case type.VIEW:\r\n          dispatch(actions.setViewMode());\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n    [dispatch, mode]\r\n  );\r\n  // non cambia mode se invioooo\r\n\r\n  const radioButtonsState = useRadioState({\r\n    state: mode,\r\n    onChange: onModeChange,\r\n  });\r\n\r\n  useEffect(() => {\r\n    radioButtonsState.setState(mode);\r\n  }, [mode, radioButtonsState]);\r\n\r\n  return (\r\n    <div className=\"d-flex p-1 justify-content-center\">\r\n      {radioButtons.map(({ value, label }) => (\r\n        <Radio\r\n          key={value}\r\n          color=\"success-o\"\r\n          name=\"mapType\"\r\n          {...radioButtonsState}\r\n          value={value}\r\n        >\r\n          {label}\r\n        </Radio>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModeSelector;\r\n","import React from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst LoadingButton = ({ children, onClick, isLoading, isSent, disabled }) => {\r\n  let content = children;\r\n\r\n  if (isLoading)\r\n    content = (\r\n      <>\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        Invio in corso\r\n      </>\r\n    );\r\n\r\n  if (isSent) content = \"Inviato\";\r\n\r\n  return (\r\n    <Button\r\n      style={{ width: \"10rem\" }}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      variant={isSent ? \"success\" : \"primary\"}\r\n    >\r\n      {content}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Radio, useRadioState } from \"pretty-checkbox-react\";\r\nimport \"@djthoms/pretty-checkbox\";\r\n\r\nimport LoadingButton from \"./LoadingButton\";\r\nimport { reportTypes } from \"../assets/reportTypes\";\r\n\r\nconst Dialog = (props) => {\r\n  const { show, onClose, onSend } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSent, setIsSent] = useState(false);\r\n\r\n  const radioButton = useRadioState({ state: \"outside\" });\r\n\r\n  const onSendListener = () => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n      setIsSent(true);\r\n      setTimeout(() => {\r\n        onSend(radioButton.state);\r\n        radioButton.setState(\"outside\");\r\n        setTimeout(() => {\r\n          setIsSent(false);\r\n        }, 200);\r\n      }, 1000);\r\n    }, 1000);\r\n  };\r\n  const onCloseListener = () => {\r\n    onClose();\r\n    radioButton.setState(\"outside\");\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onHide={onCloseListener}\r\n      show={show}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Dov'è successo?\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>Seleziona un'opzione</h4>\r\n        <Row>\r\n          {reportTypes.map(({ label, value }) => (\r\n            <Col key={value} xs={12} sm={6} md={4}>\r\n              <Radio\r\n                color=\"primary\"\r\n                name=\"types\"\r\n                {...radioButton}\r\n                value={value}\r\n              >\r\n                {label}\r\n              </Radio>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onCloseListener}>\r\n          Chiudi\r\n        </Button>\r\n        <LoadingButton\r\n          isLoading={isLoading}\r\n          isSent={isSent}\r\n          disabled={isSent||isLoading}\r\n          onClick={onSendListener}\r\n        >\r\n          Invia Segnalazione\r\n        </LoadingButton>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import { reportTypes } from \"../assets/reportTypes\";\r\n\r\nconst tlSardinia = { lat: 41.310824, lng: 8.118896 };\r\nconst trSardinia = { lat: 41.310824, lng: 9.871216 };\r\nconst blSardinia = { lat: 38.858959, lng: 8.118896 };\r\n// const brSardinia = { lat: 38.858959, lng: 9.871216 };\r\n\r\nconst randomMarkerTest = async (marker, reportAction, sendAction) => {\r\n  for (let i = 0; i < 10000; i++) {\r\n    await sleep(100);\r\n    const randomLng = getRandom(tlSardinia.lng, trSardinia.lng);\r\n    const randomLat = getRandom(blSardinia.lat, tlSardinia.lat);\r\n    marker.setLatLng({ lat: randomLat, lng: randomLng });\r\n      reportAction(); \r\n\r\n    const reportType = getRandomTYpe();\r\n    sendAction(reportType); \r\n  }\r\n  console.log(\"fine\");\r\n};\r\n\r\nfunction getRandom(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n} \r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction getRandomTYpe() {\r\n  const randomInt = getRandomInt(0, reportTypes.length);\r\n  return reportTypes[randomInt].value;\r\n}\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //Il max è escluso e il min è incluso\r\n}\r\nexport default randomMarkerTest;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport L from \"leaflet\";\r\nimport leafletPip from \"@mapbox/leaflet-pip\";\r\n\r\nimport shapeEabitanti from \"../assets/shapeEabitanti.json\";\r\nimport heatMap from \"../assets/heatMap.json\";\r\n\r\nimport { type } from \"../redux/viewType\";\r\nimport { send, setReduxReport } from \"../redux/actions\";\r\nimport useMap from \"../hooks/useMap.jsx\";\r\nimport MyButton from \"../components/MyButton\";\r\n\r\nimport ModeSelector from \"../components/ModeSelector\";\r\nimport Dialog from \"../components/Dialog\";\r\n\r\nimport test from \"../testUtil/randomMarkerTest\";\r\n\r\nconst Mappa = () => {\r\n  const sardinia = [39.905, 9.09];\r\n  const { mode } = useSelector((state) => state.reducerA);\r\n\r\n  const dispatch = useDispatch();\r\n  const [map, marker] = useMap();\r\n  const [cursor, setCursor] = useState(\"crosshair\");\r\n\r\n  const [showButton, setShowButton] = useState();\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [showPopover, setShowPopover] = useState(false);\r\n\r\n  const [report, setReport] = useState({\r\n    comune: null,\r\n    idComune: null,\r\n    idHeatMap: null,\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (mode === type.INSERT) setShowButton(true);\r\n    else setShowButton(false);\r\n  }, [mode]);\r\n\r\n  const startShowPopover = () => {\r\n    setShowPopover(true);\r\n    setTimeout(() => {\r\n      setShowPopover(false);\r\n    }, 4000);\r\n  };\r\n\r\n  const onClickListenerINVIA = (e) => {\r\n    console.log(\"inviaClick paese\");\r\n    console.log(\"posizione marker\", marker.getLatLng());\r\n\r\n    if (!marker.getLatLng()) {\r\n      startShowPopover();\r\n      return;\r\n    }\r\n    const { lat, lng } = marker.getLatLng();\r\n    let gjLayer = L.geoJSON(shapeEabitanti);\r\n    let results = leafletPip.pointInLayer([lng, lat], gjLayer);\r\n    if (results.length > 0) {\r\n      const comune = results[0].feature.properties.COMUNE;\r\n      const idComune = results[0].feature.properties.PRO_COM;\r\n\r\n      gjLayer = L.geoJSON(heatMap);\r\n      results = leafletPip.pointInLayer([lng, lat], gjLayer);\r\n      const idHeatMap = results[0].feature.properties.id;\r\n      console.log(comune, idComune, idHeatMap);\r\n\r\n      setShowDialog(true);\r\n      dispatch(setReduxReport({ comune, idComune, idHeatMap, lat, lng }));\r\n    } else {\r\n      startShowPopover();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (mode === type.INSERT) setCursor(\"crosshair\");\r\n    else setCursor(\"grab\");\r\n  }, [mode]);\r\n\r\n  const closeClickListener = () => {\r\n    console.log(\"close\");\r\n    setShowDialog(false);\r\n  };\r\n  const sendClickListener = (reportType) => {\r\n    dispatch(send({ reportType }));\r\n    setShowDialog(false);\r\n    marker.remove();\r\n    marker.setLatLng(null);\r\n\r\n    //check used cause in testing it crash.\r\n    if (map) map.setView(sardinia, 7);\r\n  };\r\n\r\n  /// to be removed, just for thest\r\n  useEffect(() => {\r\n    if (mode === type.INSERT) {\r\n      // test(marker, onClickListenerINVIA, sendClickListener);\r\n    }\r\n  }, [mode]);\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <ModeSelector />\r\n\r\n      <div className=\"anchor\" id=\"#mappa\"></div>\r\n      <div style={{ cursor }} id=\"map\" />\r\n\r\n      <>\r\n        <MyButton\r\n          onClickListener={onClickListenerINVIA}\r\n          show={showButton}\r\n          id=\"send-button\"\r\n          showPopover={showPopover}\r\n        ></MyButton>\r\n\r\n        <Dialog\r\n          show={showDialog}\r\n          onClose={closeClickListener}\r\n          onSend={sendClickListener}\r\n        />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default Mappa;\r\n","export default __webpack_public_path__ + \"static/media/logo.7e749bc2.png\";","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Navbar className=\"sticky-nav p-0\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n      <a href=\"#mappa\">\r\n        <img\r\n          src={logo}\r\n          className=\"d-inline-block align-top ml-1 logo\"\r\n          alt=\"Logo\"\r\n        />\r\n      </a>\r\n      <Nav className=\"mr-auto links\">\r\n        <Nav.Link href=\"#mappa\">Mappa</Nav.Link>\r\n        <Nav.Link href=\"#guida\">Guida</Nav.Link>\r\n        <Nav.Link href=\"#faq\">FAQ</Nav.Link>\r\n      </Nav>\r\n      \r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport Mappa from \"./sections/mappa\";\r\nimport Header from \"./components/Header\";\r\n\r\n// import NoMap from \"./section/NoMap\";\r\n\r\n\r\nconst NoMap = lazy(()=>import('./sections/NoMap'))\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Mappa />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <Suspense fallback={<div>Loading..</div>}>\r\n        <NoMap />\r\n      </Suspense>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  SEND,\r\n  SET_REPORT,\r\n  SET_VIEW_MODE,\r\n  SET_INSERT_MODE,\r\n  SET_HEAT_MODE,\r\n  GET_SHAPE_E_ABITANTI,\r\n  GET_HEAT_MAP,\r\n  GET_REPORT_TYPES,\r\n} from \"../actions\";\r\n\r\nimport { type } from \"../viewType\";\r\nconst initalState = {\r\n  mode: type.INSERT,\r\n  shapeAndAbitanti: null,\r\n  heatMap: null,\r\n  reduxReport: null,\r\n  reportTypes: null,\r\n};\r\n\r\n\r\n\r\n\r\nconst reducerA = (state = initalState, action) => {\r\n  console.log(\"AZIONE\", action.type, \" payload: \", action.payload);\r\n  switch (action.type) {\r\n    case SEND: {\r\n      return { ...state, mode: type.HEAT };\r\n    }\r\n    case SET_REPORT: {\r\n      return { ...state, reduxReport: action.payload };\r\n    }\r\n    case SET_VIEW_MODE: {\r\n      return { ...state, mode: type.VIEW };\r\n    }\r\n    case SET_INSERT_MODE: {\r\n      return { ...state, mode: type.INSERT };\r\n    }\r\n    case SET_HEAT_MODE: {\r\n      return { ...state, mode: type.HEAT };\r\n    }\r\n    case GET_SHAPE_E_ABITANTI: {\r\n      return { ...state, shapeAndAbitanti: action.payload };\r\n    }\r\n    case GET_HEAT_MAP: {\r\n      return { ...state, heatMap: action.payload };\r\n    }\r\n    case GET_REPORT_TYPES: {\r\n      return { ...state, reportTypes: action.payload };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducerA;\r\n","import { combineReducers } from \"redux\";\r\nimport reducerA from \"./reducerA\";\r\n\r\nif (process.env.NODE_ENV !== \"development\") console.log = () => {};\r\n\r\nexport default combineReducers({ reducerA });\r\n","import { createStore ,applyMiddleware} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from \"./reducers\";\r\n\r\n\r\nexport default createStore(rootReducer,applyMiddleware(thunk));\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollHandler = ({ location }) => {\r\n  useEffect(() => {\r\n    const element = document.getElementById(location.hash);\r\n\r\n    setTimeout(() => {\r\n      window.scrollTo({\r\n        behavior: element ? \"smooth\" : \"auto\",\r\n        top: element ? element.offsetTop : 0\r\n      });\r\n    }, 100);\r\n  }, [location]);\r\n\r\n  return null;\r\n};\r\n\r\nScrollHandler.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string,\r\n    search: PropTypes.string,\r\n    hash: PropTypes.string,\r\n    state: PropTypes.any,\r\n    key: PropTypes.string\r\n  }).isRequired\r\n};\r\n\r\nexport default withRouter(ScrollHandler);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./App.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { getHeatMap, getShapeEAbitanti, getReportTypes } from \"./redux/actions\";\r\nimport ScrollHandler from \"./utils/ScrollHandler\";\r\nimport { setExpireDownloadTime } from \"./utils/should\";\r\n\r\nstore.dispatch(getShapeEAbitanti());\r\nstore.dispatch(getHeatMap());\r\nstore.dispatch(getReportTypes());\r\nsetExpireDownloadTime();\r\n\r\nconsole.log(\"zzz\", process.env.REACT_APP_NOT_SECRET_CODE);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <ScrollHandler />\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","exports.reportTypes = [\r\n  {\r\n    label: \"All 'aperto\",\r\n    value: \"outside\",\r\n  },\r\n  {\r\n    label: \"Mezzo pubblico\",\r\n    value: \"bus\",\r\n  },\r\n  {\r\n    label: \"Locale\",\r\n    value: \"local\",\r\n  },\r\n  {\r\n    label: \"Ufficio pubblico\",\r\n    value: \"public\",\r\n  },\r\n  {\r\n    label: \"Struttura sanitaria\",\r\n    value: \"hospital\",\r\n  },\r\n  {\r\n    label: \"Edificio scolastico\",\r\n    value: \"school\",\r\n  },\r\n  {\r\n    label: \"Attività\",\r\n    value: \"business\",\r\n  },\r\n  {\r\n    label: \"Altro\",\r\n    value: \"other\",\r\n  },\r\n];\r\n\r\nexports.getLabel = (value) => {\r\n  const label = this.reportTypes.find((el) => value === el.value).label;\r\n  return label;\r\n};\r\n\r\nexports.normalize = (reportTypesArray) => {\r\n  const tot = reportTypesArray.reduce((sum, el) => {\r\n    return sum + el.count;\r\n  }, 0);\r\n  for (let i = 0; i < reportTypesArray.length; i++) {\r\n    reportTypesArray[i].count = (\r\n      (reportTypesArray[i].count / tot) *\r\n      100\r\n    )\r\n    .toFixed(10);\r\n  }\r\n  return reportTypesArray;\r\n};\r\n"],"sourceRoot":""}